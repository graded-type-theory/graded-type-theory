------------------------------------------------------------------------
-- Typing is preserved by unfolding only under certain conditions
------------------------------------------------------------------------

open import Definition.Typed.Variant
open import Definition.Typed.Restrictions
open import Graded.Modality

module Definition.Typed.Consequences.Unfolding
  {a} {M : Set a}
  {ùïÑ : Modality M}
  (R : Type-restrictions ùïÑ)
  where

open Type-restrictions R

open import Definition.Untyped M
open import Definition.Untyped.Neutral M type-variant hiding (‚Ñï‚â¢ne)
open import Definition.Untyped.Whnf M type-variant

open import Definition.Typed R
open import Definition.Typed.Consequences.Equality R
open import Definition.Typed.Consequences.Inequality R
open import Definition.Typed.Inversion R
open import Definition.Typed.Properties.Definition R
open import Definition.Typed.Well-formed R

open import Tools.Function
open import Tools.Level
open import Tools.Nat
open import Tools.Product
import Tools.PropositionalEquality as PE
open import Tools.Reasoning.PropositionalEquality
open import Tools.Relation
open import Tools.Unit

private
  variable
    n Œ± : Nat
    ‚àá ‚àá‚Ä≤ ‚àá‚Ä≥ : DCon (Term 0) _
    Œì : Con Term _
    t u A B : Term _
    V : Set a
    œÜ œÜ‚Ä≤ : Unfolding _

opaque

  -- If Œ± has type A in ‚àá, then Œ± has the same type in every
  -- transparentisation of ‚àá.

  unfold-‚Ü¶‚àà : œÜ ¬ª ‚àá‚Ä≤ ‚Üú ‚àá ‚Üí Œ± ‚Ü¶‚à∑ A ‚àà ‚àá ‚Üí Œ± ‚Ü¶‚à∑ A ‚àà ‚àá‚Ä≤
  unfold-‚Ü¶‚àà Œµ       ()
  unfold-‚Ü¶‚àà (œÜ‚Üú ‚Å∞)  here         = here
  unfold-‚Ü¶‚àà (œÜ‚Üú ¬π·µí) here         = here
  unfold-‚Ü¶‚àà (œÜ‚Üú ¬π·µó) here         = here
  unfold-‚Ü¶‚àà (œÜ‚Üú ‚Å∞)  (there Œ±‚Ü¶‚à∑A) = there (unfold-‚Ü¶‚àà œÜ‚Üú Œ±‚Ü¶‚à∑A)
  unfold-‚Ü¶‚àà (œÜ‚Üú ¬π·µí) (there Œ±‚Ü¶‚à∑A) = there (unfold-‚Ü¶‚àà œÜ‚Üú Œ±‚Ü¶‚à∑A)
  unfold-‚Ü¶‚àà (œÜ‚Üú ¬π·µó) (there Œ±‚Ü¶‚à∑A) = there (unfold-‚Ü¶‚àà œÜ‚Üú Œ±‚Ü¶‚à∑A)

opaque

  -- If Œ± has the body t and the type A in ‚àá, then Œ± has the same body
  -- and type in every transparentisation of ‚àá.

  unfold-‚Ü¶‚à∑‚àà : œÜ ¬ª ‚àá‚Ä≤ ‚Üú ‚àá ‚Üí Œ± ‚Ü¶ t ‚à∑ A ‚àà ‚àá ‚Üí Œ± ‚Ü¶ t ‚à∑ A ‚àà ‚àá‚Ä≤
  unfold-‚Ü¶‚à∑‚àà Œµ       ()
  unfold-‚Ü¶‚à∑‚àà (œÜ‚Üú ‚Å∞)  here        = here
  unfold-‚Ü¶‚à∑‚àà (œÜ‚Üú ¬π·µó) here        = here
  unfold-‚Ü¶‚à∑‚àà (œÜ‚Üú ‚Å∞)  (there Œ±‚Ü¶t) = there (unfold-‚Ü¶‚à∑‚àà œÜ‚Üú Œ±‚Ü¶t)
  unfold-‚Ü¶‚à∑‚àà (œÜ‚Üú ¬π·µí) (there Œ±‚Ü¶t) = there (unfold-‚Ü¶‚à∑‚àà œÜ‚Üú Œ±‚Ü¶t)
  unfold-‚Ü¶‚à∑‚àà (œÜ‚Üú ¬π·µó) (there Œ±‚Ü¶t) = there (unfold-‚Ü¶‚à∑‚àà œÜ‚Üú Œ±‚Ü¶t)

-- The following module is re-exported from the module Transitive
-- below. It uses the assumption that ‚àá‚Ä≤ is a transparentisation of ‚àá
-- that is well-formed whenever ‚àá is.

module Unconditional (œÜ‚Üú : œÜ ¬ª ‚àá‚Ä≤ ‚Üú ‚àá) (¬ª‚àá‚Ä≤ : ¬ª ‚àá ‚Üí ¬ª ‚àá‚Ä≤) where

  opaque mutual

    -- Varible contexts that are well-formed under ‚àá are well-formed
    -- under ‚àá‚Ä≤.

    unfold-‚ä¢‚Ä≤ : ‚àá ¬ª‚ä¢ Œì ‚Üí ‚àá‚Ä≤ ¬ª‚ä¢ Œì
    unfold-‚ä¢‚Ä≤ (Œµ ¬ª‚àá) = Œµ (¬ª‚àá‚Ä≤ ¬ª‚àá)
    unfold-‚ä¢‚Ä≤ (‚àô ‚ä¢A) = ‚àô unfold-‚ä¢ ‚ä¢A

    -- Types that are well-formed under ‚àá are well-formed under ‚àá‚Ä≤.

    unfold-‚ä¢ : ‚àá ¬ª Œì ‚ä¢ A ‚Üí ‚àá‚Ä≤ ¬ª Œì ‚ä¢ A
    unfold-‚ä¢ (U‚±º ‚ä¢Œì) = U‚±º (unfold-‚ä¢‚Ä≤ ‚ä¢Œì)
    unfold-‚ä¢ (‚Ñï‚±º ‚ä¢Œì) = ‚Ñï‚±º (unfold-‚ä¢‚Ä≤ ‚ä¢Œì)
    unfold-‚ä¢ (Empty‚±º ‚ä¢Œì) = Empty‚±º (unfold-‚ä¢‚Ä≤ ‚ä¢Œì)
    unfold-‚ä¢ (Unit‚±º ‚ä¢Œì ok) = Unit‚±º (unfold-‚ä¢‚Ä≤ ‚ä¢Œì) ok
    unfold-‚ä¢ (Œ†Œ£‚±º ‚ä¢A ok) = Œ†Œ£‚±º (unfold-‚ä¢ ‚ä¢A) ok
    unfold-‚ä¢ (Id‚±º ‚ä¢A ‚ä¢t ‚ä¢u) =
      Id‚±º (unfold-‚ä¢ ‚ä¢A) (unfold-‚ä¢‚à∑ ‚ä¢t) (unfold-‚ä¢‚à∑ ‚ä¢u)
    unfold-‚ä¢ (univ ‚ä¢A) = univ (unfold-‚ä¢‚à∑ ‚ä¢A)

    -- Terms that are well-formed under ‚àá are well-formed under ‚àá‚Ä≤.

    unfold-‚ä¢‚à∑ : ‚àá ¬ª Œì ‚ä¢ t ‚à∑ A ‚Üí ‚àá‚Ä≤ ¬ª Œì ‚ä¢ t ‚à∑ A
    unfold-‚ä¢‚à∑ (U‚±º ‚ä¢Œì) = U‚±º (unfold-‚ä¢‚Ä≤ ‚ä¢Œì)
    unfold-‚ä¢‚à∑ (Œ†Œ£‚±º ‚ä¢t‚ÇÅ ‚ä¢t‚ÇÇ ok) =
      Œ†Œ£‚±º (unfold-‚ä¢‚à∑ ‚ä¢t‚ÇÅ) (unfold-‚ä¢‚à∑ ‚ä¢t‚ÇÇ) ok
    unfold-‚ä¢‚à∑ (‚Ñï‚±º ‚ä¢Œì) = ‚Ñï‚±º (unfold-‚ä¢‚Ä≤ ‚ä¢Œì)
    unfold-‚ä¢‚à∑ (Empty‚±º ‚ä¢Œì) = Empty‚±º (unfold-‚ä¢‚Ä≤ ‚ä¢Œì)
    unfold-‚ä¢‚à∑ (Unit‚±º ‚ä¢Œì ok) = Unit‚±º (unfold-‚ä¢‚Ä≤ ‚ä¢Œì) ok
    unfold-‚ä¢‚à∑ (conv ‚ä¢t A‚â°A‚Ä≤) =
      conv (unfold-‚ä¢‚à∑ ‚ä¢t) (unfold-‚ä¢‚â° A‚â°A‚Ä≤)
    unfold-‚ä¢‚à∑ (var ‚ä¢Œì x‚àà) = var (unfold-‚ä¢‚Ä≤ ‚ä¢Œì) x‚àà
    unfold-‚ä¢‚à∑ (defn ‚ä¢Œì Œ±‚Ü¶t A‚â°A‚Ä≤) =
      defn (unfold-‚ä¢‚Ä≤ ‚ä¢Œì) (unfold-‚Ü¶‚àà œÜ‚Üú Œ±‚Ü¶t) A‚â°A‚Ä≤
    unfold-‚ä¢‚à∑ (lam‚±º ‚ä¢A ‚ä¢t ok) =
      lam‚±º (unfold-‚ä¢ ‚ä¢A) (unfold-‚ä¢‚à∑ ‚ä¢t) ok
    unfold-‚ä¢‚à∑ (‚ä¢t‚ÇÅ ‚àò‚±º ‚ä¢t‚ÇÇ) =
      unfold-‚ä¢‚à∑ ‚ä¢t‚ÇÅ ‚àò‚±º unfold-‚ä¢‚à∑ ‚ä¢t‚ÇÇ
    unfold-‚ä¢‚à∑ (prod‚±º ‚ä¢A ‚ä¢t‚ÇÅ ‚ä¢t‚ÇÇ ok) =
      prod‚±º (unfold-‚ä¢ ‚ä¢A)
            (unfold-‚ä¢‚à∑ ‚ä¢t‚ÇÅ)
            (unfold-‚ä¢‚à∑ ‚ä¢t‚ÇÇ)
            ok
    unfold-‚ä¢‚à∑ (fst‚±º ‚ä¢A ‚ä¢t) =
      fst‚±º (unfold-‚ä¢ ‚ä¢A) (unfold-‚ä¢‚à∑ ‚ä¢t)
    unfold-‚ä¢‚à∑ (snd‚±º ‚ä¢A ‚ä¢t) =
      snd‚±º (unfold-‚ä¢ ‚ä¢A) (unfold-‚ä¢‚à∑ ‚ä¢t)
    unfold-‚ä¢‚à∑ (prodrec‚±º ‚ä¢A ‚ä¢t ‚ä¢t‚Ä≤ ok) =
      prodrec‚±º (unfold-‚ä¢ ‚ä¢A)
              (unfold-‚ä¢‚à∑ ‚ä¢t)
              (unfold-‚ä¢‚à∑ ‚ä¢t‚Ä≤)
              ok
    unfold-‚ä¢‚à∑ (zero‚±º ‚ä¢Œì) = zero‚±º (unfold-‚ä¢‚Ä≤ ‚ä¢Œì)
    unfold-‚ä¢‚à∑ (suc‚±º ‚ä¢t) = suc‚±º (unfold-‚ä¢‚à∑ ‚ä¢t)
    unfold-‚ä¢‚à∑ (natrec‚±º ‚ä¢t‚ÇÄ ‚ä¢t‚Çõ ‚ä¢t) =
      natrec‚±º (unfold-‚ä¢‚à∑ ‚ä¢t‚ÇÄ)
              (unfold-‚ä¢‚à∑ ‚ä¢t‚Çõ)
              (unfold-‚ä¢‚à∑ ‚ä¢t)
    unfold-‚ä¢‚à∑ (emptyrec‚±º ‚ä¢A ‚ä¢t) =
      emptyrec‚±º (unfold-‚ä¢ ‚ä¢A) (unfold-‚ä¢‚à∑ ‚ä¢t)
    unfold-‚ä¢‚à∑ (star‚±º ‚ä¢Œì ok) = star‚±º (unfold-‚ä¢‚Ä≤ ‚ä¢Œì) ok
    unfold-‚ä¢‚à∑ (unitrec‚±º ‚ä¢A ‚ä¢t ‚ä¢t‚Ä≤ ok) =
      unitrec‚±º (unfold-‚ä¢ ‚ä¢A)
              (unfold-‚ä¢‚à∑ ‚ä¢t)
              (unfold-‚ä¢‚à∑ ‚ä¢t‚Ä≤)
              ok
    unfold-‚ä¢‚à∑ (Id‚±º ‚ä¢A ‚ä¢t‚ÇÅ ‚ä¢t‚ÇÇ) =
      Id‚±º (unfold-‚ä¢‚à∑ ‚ä¢A)
          (unfold-‚ä¢‚à∑ ‚ä¢t‚ÇÅ)
          (unfold-‚ä¢‚à∑ ‚ä¢t‚ÇÇ)
    unfold-‚ä¢‚à∑ (rfl‚±º ‚ä¢t) = rfl‚±º (unfold-‚ä¢‚à∑ ‚ä¢t)
    unfold-‚ä¢‚à∑ (J‚±º ‚ä¢t ‚ä¢A ‚ä¢t·µ£ ‚ä¢t‚Ä≤ ‚ä¢t‚Çö) =
      J‚±º (unfold-‚ä¢‚à∑ ‚ä¢t)
        (unfold-‚ä¢ ‚ä¢A)
        (unfold-‚ä¢‚à∑ ‚ä¢t·µ£)
        (unfold-‚ä¢‚à∑ ‚ä¢t‚Ä≤)
        (unfold-‚ä¢‚à∑ ‚ä¢t‚Çö)
    unfold-‚ä¢‚à∑ (K‚±º ‚ä¢A ‚ä¢t·µ£ ‚ä¢t‚Çö ok) =
      K‚±º (unfold-‚ä¢ ‚ä¢A)
        (unfold-‚ä¢‚à∑ ‚ä¢t·µ£)
        (unfold-‚ä¢‚à∑ ‚ä¢t‚Çö)
        ok
    unfold-‚ä¢‚à∑ ([]-cong‚±º ‚ä¢A ‚ä¢t‚ÇÅ ‚ä¢t‚ÇÇ ‚ä¢t‚Çö ok) =
      []-cong‚±º (unfold-‚ä¢ ‚ä¢A)
              (unfold-‚ä¢‚à∑ ‚ä¢t‚ÇÅ)
              (unfold-‚ä¢‚à∑ ‚ä¢t‚ÇÇ)
              (unfold-‚ä¢‚à∑ ‚ä¢t‚Çö) ok

    -- Type equalities that hold under ‚àá hold under ‚àá‚Ä≤.

    unfold-‚ä¢‚â° : ‚àá ¬ª Œì ‚ä¢ A ‚â° B ‚Üí ‚àá‚Ä≤ ¬ª Œì ‚ä¢ A ‚â° B
    unfold-‚ä¢‚â° (univ A‚â°A‚Ä≤) = univ (unfold-‚ä¢‚â°‚à∑ A‚â°A‚Ä≤)
    unfold-‚ä¢‚â° (refl ‚ä¢A) = refl (unfold-‚ä¢ ‚ä¢A)
    unfold-‚ä¢‚â° (sym A‚â°A‚Ä≤) = sym (unfold-‚ä¢‚â° A‚â°A‚Ä≤)
    unfold-‚ä¢‚â° (trans A‚â°A‚Ä≤ A‚Ä≤‚â°A‚Ä≥) =
      trans (unfold-‚ä¢‚â° A‚â°A‚Ä≤) (unfold-‚ä¢‚â° A‚Ä≤‚â°A‚Ä≥)
    unfold-‚ä¢‚â° (Œ†Œ£-cong A‚ÇÅ‚â°A‚ÇÇ B‚ÇÅ‚â°B‚ÇÇ ok) =
      Œ†Œ£-cong (unfold-‚ä¢‚â° A‚ÇÅ‚â°A‚ÇÇ) (unfold-‚ä¢‚â° B‚ÇÅ‚â°B‚ÇÇ) ok
    unfold-‚ä¢‚â° (Id-cong A‚â°A‚Ä≤ t‚ÇÅ‚â°t‚ÇÇ u‚ÇÅ‚â°u‚ÇÇ) =
      Id-cong (unfold-‚ä¢‚â° A‚â°A‚Ä≤)
              (unfold-‚ä¢‚â°‚à∑ t‚ÇÅ‚â°t‚ÇÇ)
              (unfold-‚ä¢‚â°‚à∑ u‚ÇÅ‚â°u‚ÇÇ)

    -- Term equalities that hold under ‚àá hold under ‚àá‚Ä≤.

    unfold-‚ä¢‚â°‚à∑ : ‚àá ¬ª Œì ‚ä¢ t ‚â° u ‚à∑ A ‚Üí ‚àá‚Ä≤ ¬ª Œì ‚ä¢ t ‚â° u ‚à∑ A
    unfold-‚ä¢‚â°‚à∑ (refl ‚ä¢t) = refl (unfold-‚ä¢‚à∑ ‚ä¢t)
    unfold-‚ä¢‚â°‚à∑ (sym ‚ä¢A t‚â°t‚Ä≤) =
      sym (unfold-‚ä¢ ‚ä¢A) (unfold-‚ä¢‚â°‚à∑ t‚â°t‚Ä≤)
    unfold-‚ä¢‚â°‚à∑ (trans t‚â°t‚Ä≤ t‚Ä≤‚â°t‚Ä≥) =
      trans (unfold-‚ä¢‚â°‚à∑ t‚â°t‚Ä≤) (unfold-‚ä¢‚â°‚à∑ t‚Ä≤‚â°t‚Ä≥)
    unfold-‚ä¢‚â°‚à∑ (conv t‚â°t‚Ä≤ A‚â°A‚Ä≤) =
      conv (unfold-‚ä¢‚â°‚à∑ t‚â°t‚Ä≤) (unfold-‚ä¢‚â° A‚â°A‚Ä≤)
    unfold-‚ä¢‚â°‚à∑ (Œ¥-red ‚ä¢Œì Œ±‚Ü¶t A‚â°A‚Ä≤ t‚â°t‚Ä≤) =
      Œ¥-red (unfold-‚ä¢‚Ä≤ ‚ä¢Œì) (unfold-‚Ü¶‚à∑‚àà œÜ‚Üú Œ±‚Ü¶t) A‚â°A‚Ä≤ t‚â°t‚Ä≤
    unfold-‚ä¢‚â°‚à∑ (Œ†Œ£-cong t‚ÇÅ‚â°t‚ÇÇ u‚ÇÅ‚â°u‚ÇÇ ok) =
      Œ†Œ£-cong (unfold-‚ä¢‚â°‚à∑ t‚ÇÅ‚â°t‚ÇÇ) (unfold-‚ä¢‚â°‚à∑ u‚ÇÅ‚â°u‚ÇÇ) ok
    unfold-‚ä¢‚â°‚à∑ (app-cong t‚ÇÅ‚â°t‚ÇÇ u‚ÇÅ‚â°u‚ÇÇ) =
      app-cong (unfold-‚ä¢‚â°‚à∑ t‚ÇÅ‚â°t‚ÇÇ) (unfold-‚ä¢‚â°‚à∑ u‚ÇÅ‚â°u‚ÇÇ)
    unfold-‚ä¢‚â°‚à∑ (Œ≤-red ‚ä¢A ‚ä¢t ‚ä¢x eq ok) =
      Œ≤-red (unfold-‚ä¢ ‚ä¢A)
            (unfold-‚ä¢‚à∑ ‚ä¢t)
            (unfold-‚ä¢‚à∑ ‚ä¢x)
            eq ok
    unfold-‚ä¢‚â°‚à∑ (Œ∑-eq ‚ä¢A ‚ä¢t ‚ä¢t‚Ä≤ t‚â°t‚Ä≤ ok) =
      Œ∑-eq (unfold-‚ä¢ ‚ä¢A)
          (unfold-‚ä¢‚à∑ ‚ä¢t)
          (unfold-‚ä¢‚à∑ ‚ä¢t‚Ä≤)
          (unfold-‚ä¢‚â°‚à∑ t‚â°t‚Ä≤)
          ok
    unfold-‚ä¢‚â°‚à∑ (fst-cong ‚ä¢A t‚â°t‚Ä≤) =
      fst-cong (unfold-‚ä¢ ‚ä¢A) (unfold-‚ä¢‚â°‚à∑ t‚â°t‚Ä≤)
    unfold-‚ä¢‚â°‚à∑ (snd-cong ‚ä¢A t‚â°t‚Ä≤) =
      snd-cong (unfold-‚ä¢ ‚ä¢A) (unfold-‚ä¢‚â°‚à∑ t‚â°t‚Ä≤)
    unfold-‚ä¢‚â°‚à∑ (Œ£-Œ≤‚ÇÅ ‚ä¢A ‚ä¢t ‚ä¢t‚Ä≤ eq ok) =
      Œ£-Œ≤‚ÇÅ (unfold-‚ä¢ ‚ä¢A)
          (unfold-‚ä¢‚à∑ ‚ä¢t)
          (unfold-‚ä¢‚à∑ ‚ä¢t‚Ä≤)
          eq ok
    unfold-‚ä¢‚â°‚à∑ (Œ£-Œ≤‚ÇÇ ‚ä¢A ‚ä¢t ‚ä¢t‚Ä≤ eq ok) =
      Œ£-Œ≤‚ÇÇ (unfold-‚ä¢ ‚ä¢A)
          (unfold-‚ä¢‚à∑ ‚ä¢t)
          (unfold-‚ä¢‚à∑ ‚ä¢t‚Ä≤)
          eq ok
    unfold-‚ä¢‚â°‚à∑ (Œ£-Œ∑ ‚ä¢A ‚ä¢t ‚ä¢t‚Ä≤ fst‚â° snd‚â° ok) =
      Œ£-Œ∑ (unfold-‚ä¢ ‚ä¢A)
          (unfold-‚ä¢‚à∑ ‚ä¢t)
          (unfold-‚ä¢‚à∑ ‚ä¢t‚Ä≤)
          (unfold-‚ä¢‚â°‚à∑ fst‚â°)
          (unfold-‚ä¢‚â°‚à∑ snd‚â°)
          ok
    unfold-‚ä¢‚â°‚à∑ (prod-cong ‚ä¢A t‚ÇÅ‚â°t‚ÇÇ u‚ÇÅ‚â°u‚ÇÇ ok) =
      prod-cong (unfold-‚ä¢ ‚ä¢A)
                (unfold-‚ä¢‚â°‚à∑ t‚ÇÅ‚â°t‚ÇÇ)
                (unfold-‚ä¢‚â°‚à∑ u‚ÇÅ‚â°u‚ÇÇ)
                ok
    unfold-‚ä¢‚â°‚à∑ (prodrec-cong A‚â°A‚Ä≤ t‚ÇÅ‚â°t‚ÇÇ u‚ÇÅ‚â°u‚ÇÇ ok) =
      prodrec-cong (unfold-‚ä¢‚â° A‚â°A‚Ä≤)
                  (unfold-‚ä¢‚â°‚à∑ t‚ÇÅ‚â°t‚ÇÇ)
                  (unfold-‚ä¢‚â°‚à∑ u‚ÇÅ‚â°u‚ÇÇ)
                  ok
    unfold-‚ä¢‚â°‚à∑ (prodrec-Œ≤ ‚ä¢A ‚ä¢t‚ÇÅ ‚ä¢t‚ÇÇ ‚ä¢t·µ£ eq ok) =
      prodrec-Œ≤ (unfold-‚ä¢ ‚ä¢A)
                (unfold-‚ä¢‚à∑ ‚ä¢t‚ÇÅ)
                (unfold-‚ä¢‚à∑ ‚ä¢t‚ÇÇ)
                (unfold-‚ä¢‚à∑ ‚ä¢t·µ£)
                eq ok
    unfold-‚ä¢‚â°‚à∑ (suc-cong t‚â°t‚Ä≤) =
      suc-cong (unfold-‚ä¢‚â°‚à∑ t‚â°t‚Ä≤)
    unfold-‚ä¢‚â°‚à∑ (natrec-cong A‚â°A‚Ä≤ 0‚â° s‚â° t‚â°t‚Ä≤) =
      natrec-cong (unfold-‚ä¢‚â° A‚â°A‚Ä≤)
                  (unfold-‚ä¢‚â°‚à∑ 0‚â°)
                  (unfold-‚ä¢‚â°‚à∑ s‚â°)
                  (unfold-‚ä¢‚â°‚à∑ t‚â°t‚Ä≤)
    unfold-‚ä¢‚â°‚à∑ (natrec-zero ‚ä¢t‚ÇÄ ‚ä¢t‚Çõ) =
      natrec-zero (unfold-‚ä¢‚à∑ ‚ä¢t‚ÇÄ) (unfold-‚ä¢‚à∑ ‚ä¢t‚Çõ)
    unfold-‚ä¢‚â°‚à∑ (natrec-suc ‚ä¢t‚ÇÄ ‚ä¢t‚Çõ ‚ä¢t) =
      natrec-suc (unfold-‚ä¢‚à∑ ‚ä¢t‚ÇÄ)
                (unfold-‚ä¢‚à∑ ‚ä¢t‚Çõ)
                (unfold-‚ä¢‚à∑ ‚ä¢t)
    unfold-‚ä¢‚â°‚à∑ (emptyrec-cong A‚â°A‚Ä≤ t‚â°t‚Ä≤) =
      emptyrec-cong (unfold-‚ä¢‚â° A‚â°A‚Ä≤) (unfold-‚ä¢‚â°‚à∑ t‚â°t‚Ä≤)
    unfold-‚ä¢‚â°‚à∑ (unitrec-cong A‚â°A‚Ä≤ t‚â°t‚Ä≤ r‚â° ok no-Œ∑) =
      unitrec-cong (unfold-‚ä¢‚â° A‚â°A‚Ä≤)
                  (unfold-‚ä¢‚â°‚à∑ t‚â°t‚Ä≤)
                  (unfold-‚ä¢‚â°‚à∑ r‚â°)
                  ok no-Œ∑
    unfold-‚ä¢‚â°‚à∑ (unitrec-Œ≤ ‚ä¢A ‚ä¢t ok no-Œ∑) =
      unitrec-Œ≤ (unfold-‚ä¢ ‚ä¢A) (unfold-‚ä¢‚à∑ ‚ä¢t) ok no-Œ∑
    unfold-‚ä¢‚â°‚à∑ (unitrec-Œ≤-Œ∑ ‚ä¢A ‚ä¢t ‚ä¢t·µ£ ok Œ∑) =
      unitrec-Œ≤-Œ∑ (unfold-‚ä¢ ‚ä¢A)
                  (unfold-‚ä¢‚à∑ ‚ä¢t)
                  (unfold-‚ä¢‚à∑ ‚ä¢t·µ£)
                  ok Œ∑
    unfold-‚ä¢‚â°‚à∑ (Œ∑-unit ‚ä¢t ‚ä¢t‚Ä≤ Œ∑) =
      Œ∑-unit (unfold-‚ä¢‚à∑ ‚ä¢t) (unfold-‚ä¢‚à∑ ‚ä¢t‚Ä≤) Œ∑
    unfold-‚ä¢‚â°‚à∑ (Id-cong A‚â°A‚Ä≤ t‚ÇÅ‚â°t‚ÇÇ u‚ÇÅ‚â°u‚ÇÇ) =
      Id-cong (unfold-‚ä¢‚â°‚à∑ A‚â°A‚Ä≤)
              (unfold-‚ä¢‚â°‚à∑ t‚ÇÅ‚â°t‚ÇÇ)
              (unfold-‚ä¢‚â°‚à∑ u‚ÇÅ‚â°u‚ÇÇ)
    unfold-‚ä¢‚â°‚à∑ (J-cong A‚â°A‚Ä≤ ‚ä¢t t‚â°t‚Ä≤ B‚ÇÅ‚â°B‚ÇÇ r‚â° x‚â° p‚â°) =
      J-cong (unfold-‚ä¢‚â° A‚â°A‚Ä≤)
            (unfold-‚ä¢‚à∑ ‚ä¢t)
            (unfold-‚ä¢‚â°‚à∑ t‚â°t‚Ä≤)
            (unfold-‚ä¢‚â° B‚ÇÅ‚â°B‚ÇÇ)
            (unfold-‚ä¢‚â°‚à∑ r‚â°)
            (unfold-‚ä¢‚â°‚à∑ x‚â°)
            (unfold-‚ä¢‚â°‚à∑ p‚â°)
    unfold-‚ä¢‚â°‚à∑ (K-cong A‚â°A‚Ä≤ t‚â°t‚Ä≤ B‚ÇÅ‚â°B‚ÇÇ r‚â° p‚â° ok) =
      K-cong (unfold-‚ä¢‚â° A‚â°A‚Ä≤)
            (unfold-‚ä¢‚â°‚à∑ t‚â°t‚Ä≤)
            (unfold-‚ä¢‚â° B‚ÇÅ‚â°B‚ÇÇ)
            (unfold-‚ä¢‚â°‚à∑ r‚â°)
            (unfold-‚ä¢‚â°‚à∑ p‚â°)
            ok
    unfold-‚ä¢‚â°‚à∑ ([]-cong-cong A‚â°A‚Ä≤ t‚ÇÅ‚â°t‚ÇÇ u‚ÇÅ‚â°u‚ÇÇ p‚â°p‚Ä≤ ok) =
      []-cong-cong (unfold-‚ä¢‚â° A‚â°A‚Ä≤)
                  (unfold-‚ä¢‚â°‚à∑ t‚ÇÅ‚â°t‚ÇÇ)
                  (unfold-‚ä¢‚â°‚à∑ u‚ÇÅ‚â°u‚ÇÇ)
                  (unfold-‚ä¢‚â°‚à∑ p‚â°p‚Ä≤) ok
    unfold-‚ä¢‚â°‚à∑ (J-Œ≤ ‚ä¢t ‚ä¢A ‚ä¢t·µ£ eq) =
      J-Œ≤ (unfold-‚ä¢‚à∑ ‚ä¢t)
          (unfold-‚ä¢ ‚ä¢A)
          (unfold-‚ä¢‚à∑ ‚ä¢t·µ£)
          eq
    unfold-‚ä¢‚â°‚à∑ (K-Œ≤ ‚ä¢A ‚ä¢t ok) =
      K-Œ≤ (unfold-‚ä¢ ‚ä¢A) (unfold-‚ä¢‚à∑ ‚ä¢t) ok
    unfold-‚ä¢‚â°‚à∑ ([]-cong-Œ≤ ‚ä¢t eq ok) =
      []-cong-Œ≤ (unfold-‚ä¢‚à∑ ‚ä¢t) eq ok
    unfold-‚ä¢‚â°‚à∑ (equality-reflection ok ‚ä¢Id ‚ä¢t) =
      equality-reflection ok (unfold-‚ä¢ ‚ä¢Id) (unfold-‚ä¢‚à∑ ‚ä¢t)

  opaque

    -- Reductions that hold under ‚àá hold under ‚àá‚Ä≤.

    unfold-‚áí‚à∑ : ‚àá ¬ª Œì ‚ä¢ t ‚áí u ‚à∑ A ‚Üí ‚àá‚Ä≤ ¬ª Œì ‚ä¢ t ‚áí u ‚à∑ A
    unfold-‚áí‚à∑ (conv t‚áít‚Ä≤ A‚â°A‚Ä≤) =
      conv (unfold-‚áí‚à∑ t‚áít‚Ä≤) (unfold-‚ä¢‚â° A‚â°A‚Ä≤)
    unfold-‚áí‚à∑ (Œ¥-red ‚ä¢Œì Œ±‚Ü¶t A‚â°A‚Ä≤ T‚â°T‚Ä≤) =
      Œ¥-red (unfold-‚ä¢‚Ä≤ ‚ä¢Œì) (unfold-‚Ü¶‚à∑‚àà œÜ‚Üú Œ±‚Ü¶t) A‚â°A‚Ä≤ T‚â°T‚Ä≤
    unfold-‚áí‚à∑ (app-subst t‚áít‚Ä≤ ‚ä¢a) =
      app-subst (unfold-‚áí‚à∑ t‚áít‚Ä≤) (unfold-‚ä¢‚à∑ ‚ä¢a)
    unfold-‚áí‚à∑ (Œ≤-red ‚ä¢A ‚ä¢t ‚ä¢x eq ok) =
      Œ≤-red (unfold-‚ä¢ ‚ä¢A)
            (unfold-‚ä¢‚à∑ ‚ä¢t)
            (unfold-‚ä¢‚à∑ ‚ä¢x)
            eq ok
    unfold-‚áí‚à∑ (fst-subst ‚ä¢A t‚áít‚Ä≤) =
      fst-subst (unfold-‚ä¢ ‚ä¢A) (unfold-‚áí‚à∑ t‚áít‚Ä≤)
    unfold-‚áí‚à∑ (snd-subst ‚ä¢A t‚áít‚Ä≤) =
      snd-subst (unfold-‚ä¢ ‚ä¢A) (unfold-‚áí‚à∑ t‚áít‚Ä≤)
    unfold-‚áí‚à∑ (Œ£-Œ≤‚ÇÅ ‚ä¢A ‚ä¢t ‚ä¢t‚Ä≤ eq ok) =
      Œ£-Œ≤‚ÇÅ (unfold-‚ä¢ ‚ä¢A)
          (unfold-‚ä¢‚à∑ ‚ä¢t)
          (unfold-‚ä¢‚à∑ ‚ä¢t‚Ä≤)
          eq ok
    unfold-‚áí‚à∑ (Œ£-Œ≤‚ÇÇ ‚ä¢A ‚ä¢t ‚ä¢t‚Ä≤ eq ok) =
      Œ£-Œ≤‚ÇÇ (unfold-‚ä¢ ‚ä¢A)
          (unfold-‚ä¢‚à∑ ‚ä¢t)
          (unfold-‚ä¢‚à∑ ‚ä¢t‚Ä≤)
          eq ok
    unfold-‚áí‚à∑ (prodrec-subst ‚ä¢A ‚ä¢a t‚áít‚Ä≤ ok) =
      prodrec-subst (unfold-‚ä¢ ‚ä¢A)
                    (unfold-‚ä¢‚à∑ ‚ä¢a)
                    (unfold-‚áí‚à∑ t‚áít‚Ä≤)
                    ok
    unfold-‚áí‚à∑ (prodrec-Œ≤ ‚ä¢A ‚ä¢t ‚ä¢t‚ÇÇ ‚ä¢t·µ£ eq ok) =
      prodrec-Œ≤ (unfold-‚ä¢ ‚ä¢A)
                (unfold-‚ä¢‚à∑ ‚ä¢t)
                (unfold-‚ä¢‚à∑ ‚ä¢t‚ÇÇ)
                (unfold-‚ä¢‚à∑ ‚ä¢t·µ£)
                eq ok
    unfold-‚áí‚à∑ (natrec-subst ‚ä¢t‚ÇÄ ‚ä¢t‚Çõ t‚áít‚Ä≤) =
      natrec-subst (unfold-‚ä¢‚à∑ ‚ä¢t‚ÇÄ)
                  (unfold-‚ä¢‚à∑ ‚ä¢t‚Çõ)
                  (unfold-‚áí‚à∑ t‚áít‚Ä≤)
    unfold-‚áí‚à∑ (natrec-zero ‚ä¢t‚ÇÄ ‚ä¢t‚Çõ) =
      natrec-zero (unfold-‚ä¢‚à∑ ‚ä¢t‚ÇÄ) (unfold-‚ä¢‚à∑ ‚ä¢t‚Çõ)
    unfold-‚áí‚à∑ (natrec-suc ‚ä¢t‚ÇÄ ‚ä¢t‚Çõ ‚ä¢t) =
      natrec-suc (unfold-‚ä¢‚à∑ ‚ä¢t‚ÇÄ)
                (unfold-‚ä¢‚à∑ ‚ä¢t‚Çõ)
                (unfold-‚ä¢‚à∑ ‚ä¢t)
    unfold-‚áí‚à∑ (emptyrec-subst ‚ä¢A t‚áít‚Ä≤) =
      emptyrec-subst (unfold-‚ä¢ ‚ä¢A) (unfold-‚áí‚à∑ t‚áít‚Ä≤)
    unfold-‚áí‚à∑ (unitrec-subst ‚ä¢A ‚ä¢a t‚áít‚Ä≤ ok no-Œ∑) =
      unitrec-subst (unfold-‚ä¢ ‚ä¢A)
                    (unfold-‚ä¢‚à∑ ‚ä¢a)
                    (unfold-‚áí‚à∑ t‚áít‚Ä≤)
                    ok no-Œ∑
    unfold-‚áí‚à∑ (unitrec-Œ≤ ‚ä¢A ‚ä¢t ok no-Œ∑) =
      unitrec-Œ≤ (unfold-‚ä¢ ‚ä¢A) (unfold-‚ä¢‚à∑ ‚ä¢t) ok no-Œ∑
    unfold-‚áí‚à∑ (unitrec-Œ≤-Œ∑ ‚ä¢A ‚ä¢t ‚ä¢t·µ£ ok Œ∑) =
      unitrec-Œ≤-Œ∑ (unfold-‚ä¢ ‚ä¢A)
                  (unfold-‚ä¢‚à∑ ‚ä¢t)
                  (unfold-‚ä¢‚à∑ ‚ä¢t·µ£)
                  ok Œ∑
    unfold-‚áí‚à∑ (J-subst ‚ä¢t ‚ä¢A ‚ä¢r ‚ä¢p w‚áíw‚Ä≤) =
      J-subst (unfold-‚ä¢‚à∑ ‚ä¢t)
              (unfold-‚ä¢ ‚ä¢A)
              (unfold-‚ä¢‚à∑ ‚ä¢r)
              (unfold-‚ä¢‚à∑ ‚ä¢p)
              (unfold-‚áí‚à∑ w‚áíw‚Ä≤)
    unfold-‚áí‚à∑ (K-subst ‚ä¢A ‚ä¢r t‚áít‚Ä≤ ok) =
      K-subst (unfold-‚ä¢ ‚ä¢A)
              (unfold-‚ä¢‚à∑ ‚ä¢r)
              (unfold-‚áí‚à∑ t‚áít‚Ä≤)
              ok
    unfold-‚áí‚à∑ ([]-cong-subst ‚ä¢A ‚ä¢a ‚ä¢a‚Ä≤ t‚áít‚Ä≤ ok) =
      []-cong-subst (unfold-‚ä¢ ‚ä¢A)
                    (unfold-‚ä¢‚à∑ ‚ä¢a)
                    (unfold-‚ä¢‚à∑ ‚ä¢a‚Ä≤)
                    (unfold-‚áí‚à∑ t‚áít‚Ä≤)
                    ok
    unfold-‚áí‚à∑ (J-Œ≤ ‚ä¢t ‚ä¢t‚Ä≤ t‚â°t‚Ä≤ ‚ä¢A A‚â° ‚ä¢t·µ£) =
      J-Œ≤ (unfold-‚ä¢‚à∑ ‚ä¢t)
          (unfold-‚ä¢‚à∑ ‚ä¢t‚Ä≤)
          (unfold-‚ä¢‚â°‚à∑ t‚â°t‚Ä≤)
          (unfold-‚ä¢ ‚ä¢A)
          (unfold-‚ä¢‚â° A‚â°)
          (unfold-‚ä¢‚à∑ ‚ä¢t·µ£)
    unfold-‚áí‚à∑ (K-Œ≤ ‚ä¢A ‚ä¢t ok) =
      K-Œ≤ (unfold-‚ä¢ ‚ä¢A) (unfold-‚ä¢‚à∑ ‚ä¢t) ok
    unfold-‚áí‚à∑ ([]-cong-Œ≤ ‚ä¢A ‚ä¢t ‚ä¢t‚Ä≤ t‚â°t‚Ä≤ ok) =
      []-cong-Œ≤ (unfold-‚ä¢ ‚ä¢A)
                (unfold-‚ä¢‚à∑ ‚ä¢t)
                (unfold-‚ä¢‚à∑ ‚ä¢t‚Ä≤)
                (unfold-‚ä¢‚â°‚à∑ t‚â°t‚Ä≤)
                ok

  opaque

    -- Reductions that hold under ‚àá hold under ‚àá‚Ä≤.

    unfold-‚áí : ‚àá ¬ª Œì ‚ä¢ A ‚áí B ‚Üí ‚àá‚Ä≤ ¬ª Œì ‚ä¢ A ‚áí B
    unfold-‚áí (univ A‚áíB) = univ (unfold-‚áí‚à∑ A‚áíB)

  opaque

    -- Reductions that hold under ‚àá hold under ‚àá‚Ä≤.

    unfold-‚áí* : ‚àá ¬ª Œì ‚ä¢ A ‚áí* B ‚Üí ‚àá‚Ä≤ ¬ª Œì ‚ä¢ A ‚áí* B
    unfold-‚áí* (id ‚ä¢A)      = id (unfold-‚ä¢ ‚ä¢A)
    unfold-‚áí* (A‚áíX ‚á® X‚áí*B) = unfold-‚áí A‚áíX ‚á® unfold-‚áí* X‚áí*B

  opaque

    -- Reductions that hold under ‚àá hold under ‚àá‚Ä≤.

    unfold-‚áí*‚à∑ : ‚àá ¬ª Œì ‚ä¢ t ‚áí* u ‚à∑ A ‚Üí ‚àá‚Ä≤ ¬ª Œì ‚ä¢ t ‚áí* u ‚à∑ A
    unfold-‚áí*‚à∑ (id ‚ä¢t)      = id (unfold-‚ä¢‚à∑ ‚ä¢t)
    unfold-‚áí*‚à∑ (t‚áíx ‚á® x‚áí*u) = unfold-‚áí‚à∑ t‚áíx ‚á® unfold-‚áí*‚à∑ x‚áí*u

module Explicit (mode-eq : unfolding-mode PE.‚â° explicit) where

  private opaque

    _! : œÜ ¬ª ‚àá‚Ä≤ ‚Üú ‚àá ‚Üí {œÜ‚Ä≤ : Unfolding n} ‚Üí œÜ ‚äî·µí·µó œÜ‚Ä≤ ¬ª ‚àá‚Ä≤ ‚Üú ‚àá
    œÜ‚Üú ! with unfolding-mode
    ...     | explicit   = œÜ‚Üú
    ...     | transitive = case mode-eq of Œª ()

  opaque

    no-unfold-¬ª :
      Opacity-allowed ‚Üí
      ‚àÉ‚ÇÉ Œª (‚àá ‚àá‚Ä≤ : DCon (Term 0) 2) (œÜ : Unfolding 2) ‚Üí
           œÜ ¬ª ‚àá‚Ä≤ ‚Üú ‚àá √ó ¬ª ‚àá √ó ¬¨ ¬ª ‚àá‚Ä≤
    no-unfold-¬ª ok =
      let ‚àá‚ÇÅ = Œµ ‚àô‚ü® opa Œµ ‚ü©[ ‚Ñï ‚à∑ U 0 ]
          ‚àá = ‚àá‚ÇÅ ‚àô‚ü® opa (Œµ ¬π) ‚ü©[ zero ‚à∑ defn 0 ]
          ‚àá‚Ä≤ = ‚àá‚ÇÅ ‚àô‚ü® tra ‚ü©[ zero ‚à∑ defn 0 ]
          ‚àá‚ÇÅ‚ä¢Œµ = Œµ ‚àô·µí‚ü® ok , Œµ ‚ü©[ ‚Ñï‚±º ŒµŒµ ‚à∑ U‚±º ŒµŒµ ]
          ‚àá‚ÇÅ·µó‚ä¢Œµ = Œµ ‚àô·µó[ ‚Ñï‚±º ŒµŒµ ]
          ¬ª‚àá = ‚àô·µí‚ü® ok , Œµ ! ¬π·µí ‚ü©[
            conv (zero‚±º ‚àá‚ÇÅ·µó‚ä¢Œµ) (sym (univ (Œ¥-red ‚àá‚ÇÅ·µó‚ä¢Œµ here PE.refl PE.refl))) ‚à∑
            univ (defn ‚àá‚ÇÅ‚ä¢Œµ here PE.refl) ]
          not ¬ª‚àá‚Ä≤ = ‚Ñï‚â¢ne {V = Lift _ ‚ä§} ‚¶É Œµ ‚¶Ñ
                         (defn (there here))
                         (sym (inversion-zero (wf-‚Ü¶‚à∑‚àà here ¬ª‚àá‚Ä≤)))
      in  ‚àá , ‚àá‚Ä≤ , Œµ ‚Å∞ ¬π , (Œµ ‚Å∞ !) ¬π·µí , ¬ª‚àá , not

module Transitive (mode-eq : unfolding-mode PE.‚â° transitive) where

  private opaque

    ‚äî·µí·µó-eq : (œÜ œÜ‚Ä≤ : Unfolding n) ‚Üí œÜ ‚äî·µí·µó œÜ‚Ä≤ PE.‚â° œÜ ‚äî·µí œÜ‚Ä≤
    ‚äî·µí·µó-eq œÜ œÜ‚Ä≤ with unfolding-mode
    ...            | explicit   = case mode-eq of Œª ()
    ...            | transitive = PE.refl

  opaque

    comm-‚äî·µí·µó : (œÜ œÜ‚Ä≤ : Unfolding n) ‚Üí œÜ ‚äî·µí·µó œÜ‚Ä≤ PE.‚â° œÜ‚Ä≤ ‚äî·µí·µó œÜ
    comm-‚äî·µí·µó œÜ œÜ‚Ä≤ = begin
      œÜ ‚äî·µí·µó œÜ‚Ä≤  ‚â°‚ü® ‚äî·µí·µó-eq œÜ œÜ‚Ä≤ ‚ü©
      œÜ ‚äî·µí œÜ‚Ä≤   ‚â°‚ü® comm-‚äî·µí œÜ œÜ‚Ä≤ ‚ü©
      œÜ‚Ä≤ ‚äî·µí œÜ   ‚â°Àò‚ü® ‚äî·µí·µó-eq œÜ‚Ä≤ œÜ ‚ü©
      œÜ‚Ä≤ ‚äî·µí·µó œÜ  ‚àé

  private opaque

    a1[23] : (œÜ œÜ‚Ä≤ œÜ‚Ä≥ : Unfolding n) ‚Üí œÜ ‚äî·µí·µó (œÜ‚Ä≤ ‚äî·µí·µó œÜ‚Ä≥) PE.‚â° (œÜ ‚äî·µí œÜ‚Ä≤) ‚äî·µí·µó œÜ‚Ä≥
    a1[23] œÜ œÜ‚Ä≤ œÜ‚Ä≥ = begin
      œÜ ‚äî·µí·µó (œÜ‚Ä≤ ‚äî·µí·µó œÜ‚Ä≥)  ‚â°‚ü® assoc-‚äî·µí·µó œÜ œÜ‚Ä≤ œÜ‚Ä≥ ‚ü©
      (œÜ ‚äî·µí·µó œÜ‚Ä≤) ‚äî·µí·µó œÜ‚Ä≥  ‚â°‚ü® PE.cong (_‚äî·µí·µó œÜ‚Ä≥) (‚äî·µí·µó-eq œÜ œÜ‚Ä≤) ‚ü©
      (œÜ ‚äî·µí œÜ‚Ä≤) ‚äî·µí·µó œÜ‚Ä≥   ‚àé

  private opaque

    a[13]2 : (œÜ œÜ‚Ä≤ œÜ‚Ä≥ : Unfolding n) ‚Üí (œÜ ‚äî·µí·µó œÜ‚Ä≥) ‚äî·µí·µó œÜ‚Ä≤ PE.‚â° (œÜ ‚äî·µí œÜ‚Ä≤) ‚äî·µí·µó œÜ‚Ä≥
    a[13]2 œÜ œÜ‚Ä≤ œÜ‚Ä≥ = begin
      (œÜ ‚äî·µí·µó œÜ‚Ä≥) ‚äî·µí·µó œÜ‚Ä≤  ‚â°Àò‚ü® assoc-‚äî·µí·µó œÜ œÜ‚Ä≥ œÜ‚Ä≤ ‚ü©
      œÜ ‚äî·µí·µó (œÜ‚Ä≥ ‚äî·µí·µó œÜ‚Ä≤)  ‚â°‚ü® PE.cong (œÜ ‚äî·µí·µó_) (comm-‚äî·µí·µó œÜ‚Ä≥ œÜ‚Ä≤) ‚ü©
      œÜ ‚äî·µí·µó (œÜ‚Ä≤ ‚äî·µí·µó œÜ‚Ä≥)  ‚â°‚ü® assoc-‚äî·µí·µó œÜ œÜ‚Ä≤ œÜ‚Ä≥ ‚ü©
      (œÜ ‚äî·µí·µó œÜ‚Ä≤) ‚äî·µí·µó œÜ‚Ä≥  ‚â°‚ü® PE.cong (_‚äî·µí·µó œÜ‚Ä≥) (‚äî·µí·µó-eq œÜ œÜ‚Ä≤) ‚ü©
      (œÜ ‚äî·µí œÜ‚Ä≤) ‚äî·µí·µó œÜ‚Ä≥   ‚àé

  opaque

    join-¬ª‚Üú : œÜ ¬ª ‚àá‚Ä≤ ‚Üú ‚àá ‚Üí œÜ‚Ä≤ ¬ª ‚àá‚Ä≥ ‚Üú ‚àá‚Ä≤ ‚Üí œÜ ‚äî·µí·µó œÜ‚Ä≤ ¬ª ‚àá‚Ä≥ ‚Üú ‚àá
    join-¬ª‚Üú œÜ‚Üú œÜ‚Ä≤‚Üú = PE.subst (_¬ª _ ‚Üú _) (PE.sym (‚äî·µí·µó-eq _ _)) (join‚Ä≤ œÜ‚Üú œÜ‚Ä≤‚Üú)
      where
      join‚Ä≤ : œÜ ¬ª ‚àá‚Ä≤ ‚Üú ‚àá ‚Üí œÜ‚Ä≤ ¬ª ‚àá‚Ä≥ ‚Üú ‚àá‚Ä≤ ‚Üí œÜ ‚äî·µí œÜ‚Ä≤ ¬ª ‚àá‚Ä≥ ‚Üú ‚àá
      join‚Ä≤ Œµ Œµ = Œµ
      join‚Ä≤ (œÜ‚Üú ‚Å∞) (œÜ‚Ä≤‚Üú ‚Å∞) = join‚Ä≤ œÜ‚Üú œÜ‚Ä≤‚Üú ‚Å∞
      join‚Ä≤ (œÜ‚Üú ‚Å∞) (œÜ‚Ä≤‚Üú ¬π·µí) =
        PE.subst (_¬ª _ ‚Üú _) (a1[23] _ _ _) (join-¬ª‚Üú œÜ‚Üú œÜ‚Ä≤‚Üú) ¬π·µí
      join‚Ä≤ (œÜ‚Üú ‚Å∞) (œÜ‚Ä≤‚Üú ¬π·µó) = join‚Ä≤ œÜ‚Üú œÜ‚Ä≤‚Üú ¬π·µó
      join‚Ä≤ (œÜ‚Üú ¬π·µí) (œÜ‚Ä≤‚Üú ‚Å∞) =
        PE.subst (_¬ª _ ‚Üú _) (a[13]2 _ _ _) (join-¬ª‚Üú œÜ‚Üú œÜ‚Ä≤‚Üú) ¬π·µí
      join‚Ä≤ (œÜ‚Üú ¬π·µí) (œÜ‚Ä≤‚Üú ¬π·µó) =
        PE.subst (_¬ª _ ‚Üú _) (a[13]2 _ _ _) (join-¬ª‚Üú œÜ‚Üú œÜ‚Ä≤‚Üú) ¬π·µí
      join‚Ä≤ (œÜ‚Üú ¬π·µó) (œÜ‚Ä≤‚Üú ‚Å∞) = join‚Ä≤ œÜ‚Üú œÜ‚Ä≤‚Üú ¬π·µó
      join‚Ä≤ (œÜ‚Üú ¬π·µó) (œÜ‚Ä≤‚Üú ¬π·µó) = join‚Ä≤ œÜ‚Üú œÜ‚Ä≤‚Üú ¬π·µó

  opaque

    unjoin-¬ª‚Üú : œÜ‚Ä≤ ‚äî·µí·µó œÜ ¬ª ‚àá‚Ä≥ ‚Üú ‚àá ‚Üí œÜ ¬ª ‚àá‚Ä≤ ‚Üú ‚àá ‚Üí œÜ‚Ä≤ ¬ª ‚àá‚Ä≥ ‚Üú ‚àá‚Ä≤
    unjoin-¬ª‚Üú œÜ‚Ä≤œÜ‚Üú œÜ‚Üú = unjoin‚Ä≤ (PE.subst (_¬ª _ ‚Üú _) (‚äî·µí·µó-eq _ _) œÜ‚Ä≤œÜ‚Üú) œÜ‚Üú
      where
      unjoin‚Ä≤ : œÜ‚Ä≤ ‚äî·µí œÜ ¬ª ‚àá‚Ä≥ ‚Üú ‚àá ‚Üí œÜ ¬ª ‚àá‚Ä≤ ‚Üú ‚àá ‚Üí œÜ‚Ä≤ ¬ª ‚àá‚Ä≥ ‚Üú ‚àá‚Ä≤
      unjoin‚Ä≤ {œÜ‚Ä≤ = Œµ} {œÜ = Œµ} Œµ Œµ = Œµ
      unjoin‚Ä≤ {œÜ‚Ä≤ = œÜ‚Ä≤ ‚Å∞} {œÜ = œÜ ‚Å∞} (œÜ‚Ä≤œÜ‚Üú ‚Å∞) (œÜ‚Üú ‚Å∞) = unjoin‚Ä≤ œÜ‚Ä≤œÜ‚Üú œÜ‚Üú ‚Å∞
      unjoin‚Ä≤ {œÜ‚Ä≤ = œÜ‚Ä≤ ¬π} {œÜ = œÜ ‚Å∞} (œÜ‚Ä≤œÜ‚Üú ¬π·µí) (œÜ‚Üú ‚Å∞) =
        unjoin-¬ª‚Üú (PE.subst (_¬ª _ ‚Üú _) (PE.sym (a[13]2 _ _ _)) œÜ‚Ä≤œÜ‚Üú) œÜ‚Üú ¬π·µí
      unjoin‚Ä≤ {œÜ‚Ä≤ = œÜ‚Ä≤ ¬π} {œÜ = œÜ ‚Å∞} (œÜ‚Ä≤œÜ‚Üú ¬π·µó) (œÜ‚Üú ‚Å∞) = unjoin‚Ä≤ œÜ‚Ä≤œÜ‚Üú œÜ‚Üú ¬π·µó
      unjoin‚Ä≤ {œÜ‚Ä≤ = œÜ‚Ä≤ ‚Å∞} {œÜ = œÜ ¬π} (œÜ‚Ä≤œÜ‚Üú ¬π·µí) (œÜ‚Üú ¬π·µí) =
        unjoin-¬ª‚Üú (PE.subst (_¬ª _ ‚Üú _) (PE.sym (a1[23] _ _ _)) œÜ‚Ä≤œÜ‚Üú) œÜ‚Üú ‚Å∞
      unjoin‚Ä≤ {œÜ‚Ä≤ = œÜ‚Ä≤ ‚Å∞} {œÜ = œÜ ¬π} (œÜ‚Ä≤œÜ‚Üú ¬π·µó) (œÜ‚Üú ¬π·µó) = unjoin‚Ä≤ œÜ‚Ä≤œÜ‚Üú œÜ‚Üú ‚Å∞
      unjoin‚Ä≤ {œÜ‚Ä≤ = œÜ‚Ä≤ ¬π} {œÜ = œÜ ¬π} (œÜ‚Ä≤œÜ‚Üú ¬π·µí) (œÜ‚Üú ¬π·µí) =
        unjoin-¬ª‚Üú (PE.subst (_¬ª _ ‚Üú _) (PE.sym (a1[23] _ _ _)) œÜ‚Ä≤œÜ‚Üú) œÜ‚Üú ¬π·µó
      unjoin‚Ä≤ {œÜ‚Ä≤ = œÜ‚Ä≤ ¬π} {œÜ = œÜ ¬π} (œÜ‚Ä≤œÜ‚Üú ¬π·µó) (œÜ‚Üú ¬π·µó) = unjoin‚Ä≤ œÜ‚Ä≤œÜ‚Üú œÜ‚Üú ¬π·µó

  -- If ‚àá‚Ä≤ is a transparentisation of the well-formed definition
  -- context ‚àá, then ‚àá‚Ä≤ is well-formed.

  unfold-¬ª : œÜ ¬ª ‚àá‚Ä≤ ‚Üú ‚àá ‚Üí ¬ª ‚àá ‚Üí ¬ª ‚àá‚Ä≤

  -- Other preservation lemmas related to transparentisation.

  module _ (œÜ¬ª : œÜ ¬ª ‚àá‚Ä≤ ‚Üú ‚àá) where
    open Unconditional œÜ¬ª (unfold-¬ª œÜ¬ª) public

  unfold-¬ª Œµ       Œµ                         = Œµ
  unfold-¬ª (œÜ‚Üú ‚Å∞)  ‚àô·µí‚ü® ok , œÜ‚Ä≤‚Üú ‚ü©[ ‚ä¢t ‚à∑ ‚ä¢A ] =
    let _ , œÜ‚Ä≥‚Üú = total-¬ª‚Üú _ _
    in  ‚àô·µí‚ü® ok , œÜ‚Ä≥‚Üú ‚ü©[ unfold-‚ä¢‚à∑ (unjoin-¬ª‚Üú (join-¬ª‚Üú œÜ‚Üú œÜ‚Ä≥‚Üú) œÜ‚Ä≤‚Üú) ‚ä¢t
                      ‚à∑ unfold-‚ä¢ œÜ‚Üú ‚ä¢A
                      ]
  unfold-¬ª (œÜ‚Üú ¬π·µí) ‚àô·µí‚ü® ok , œÜ‚Ä≤‚Üú ‚ü©[ ‚ä¢t ‚à∑ ‚ä¢A ] = ‚àô·µó[ unfold-‚ä¢‚à∑ (unjoin-¬ª‚Üú œÜ‚Üú œÜ‚Ä≤‚Üú) ‚ä¢t ]
  unfold-¬ª (œÜ‚Üú ‚Å∞)              ‚àô·µó[ ‚ä¢t      ] = ‚àô·µó[ unfold-‚ä¢‚à∑ œÜ‚Üú ‚ä¢t ]
  unfold-¬ª (œÜ‚Üú ¬π·µó)             ‚àô·µó[ ‚ä¢t      ] = ‚àô·µó[ unfold-‚ä¢‚à∑ œÜ‚Üú ‚ä¢t ]
