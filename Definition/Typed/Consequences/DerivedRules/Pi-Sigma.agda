------------------------------------------------------------------------
-- Derived rules related to both Œ†- and Œ£-types
------------------------------------------------------------------------

open import Definition.Typed.Restrictions
open import Graded.Modality

module Definition.Typed.Consequences.DerivedRules.Pi-Sigma
  {a} {M : Set a}
  {ùïÑ : Modality M}
  (R : Type-restrictions ùïÑ)
  where

open Type-restrictions R

open import Definition.Typed R
open import Definition.Typed.Consequences.Syntactic R
open import Definition.Typed.Properties R

open import Definition.Untyped M

open import Tools.Function
open import Tools.Product

private variable
  Œì               : Con _ _
  A A‚ÇÅ A‚ÇÇ B B‚ÇÅ B‚ÇÇ : Term _
  p q             : M
  b               : BinderMode
  l‚ÇÅ l‚ÇÇ           : Universe-level

opaque

  -- A variant of the type formation rule Œ†Œ£‚±º.

  Œ†Œ£‚±º‚Ä≤ :
    Œì ‚àô A ‚ä¢ B ‚Üí
    Œ†Œ£-allowed b p q ‚Üí
    Œì ‚ä¢ Œ†Œ£‚ü® b ‚ü© p , q ‚ñ∑ A ‚ñπ B
  Œ†Œ£‚±º‚Ä≤ ‚ä¢B ok =
    case wf ‚ä¢B of Œª {
      (_ ‚àô ‚ä¢A) ‚Üí
    Œ†Œ£‚±º ‚ä¢A ‚ä¢B ok }

opaque

  -- A variant of the type equality rule Œ†Œ£-cong.

  Œ†Œ£-cong‚Ä≤ :
    Œì ‚ä¢ A‚ÇÅ ‚â° A‚ÇÇ ‚Üí
    Œì ‚àô A‚ÇÅ ‚ä¢ B‚ÇÅ ‚â° B‚ÇÇ ‚Üí
    Œ†Œ£-allowed b p q ‚Üí
    Œì ‚ä¢ Œ†Œ£‚ü® b ‚ü© p , q ‚ñ∑ A‚ÇÅ ‚ñπ B‚ÇÅ ‚â° Œ†Œ£‚ü® b ‚ü© p , q ‚ñ∑ A‚ÇÇ ‚ñπ B‚ÇÇ
  Œ†Œ£-cong‚Ä≤ A‚ÇÅ‚â°A‚ÇÇ =
    Œ†Œ£-cong (syntacticEq A‚ÇÅ‚â°A‚ÇÇ .proj‚ÇÅ) A‚ÇÅ‚â°A‚ÇÇ

opaque

  -- A variant of the term equality rule Œ†Œ£-cong.

  Œ†Œ£-cong-U :
    Œì ‚ä¢ A‚ÇÅ ‚â° A‚ÇÇ ‚à∑ U l‚ÇÅ ‚Üí
    Œì ‚àô A‚ÇÅ ‚ä¢ B‚ÇÅ ‚â° B‚ÇÇ ‚à∑ U l‚ÇÇ ‚Üí
    Œ†Œ£-allowed b p q ‚Üí
    Œì ‚ä¢ Œ†Œ£‚ü® b ‚ü© p , q ‚ñ∑ A‚ÇÅ ‚ñπ B‚ÇÅ ‚â° Œ†Œ£‚ü® b ‚ü© p , q ‚ñ∑ A‚ÇÇ ‚ñπ B‚ÇÇ ‚à∑ U (l‚ÇÅ ‚äî·µò l‚ÇÇ)
  Œ†Œ£-cong-U A‚ÇÅ‚â°A‚ÇÇ =
    Œ†Œ£-cong (univ (syntacticEqTerm A‚ÇÅ‚â°A‚ÇÇ .proj‚ÇÇ .proj‚ÇÅ)) A‚ÇÅ‚â°A‚ÇÇ
