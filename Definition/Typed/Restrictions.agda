------------------------------------------------------------------------
-- Restrictions on typing derivations
------------------------------------------------------------------------

open import Graded.Modality

module Definition.Typed.Restrictions
  {a} {M : Set a}
  (ùïÑ : Modality M)
  where

open Modality ùïÑ

open import Definition.Untyped M

open import Tools.Function
open import Tools.Level
open import Tools.Product
open import Tools.Relation
open import Tools.Unit

-- Restrictions on typing derivations.

record Type-restrictions : Set (lsuc a) where
  no-eta-equality
  field
    -- Unit types of either variant are only allowed if the given
    -- predicate holds.
    Unit-allowed : SigmaMode ‚Üí Set a

    -- Restrictions imposed upon Œ†- and Œ£-types.
    Œ†Œ£-allowed : BinderMode ‚Üí (p q : M) ‚Üí Set a

  -- Unit types with Œ∑-equality are only allowed if the following
  -- predicate holds

  UnitÀ¢-allowed : Set a
  UnitÀ¢-allowed = Unit-allowed Œ£‚Çö

  -- Unit types without Œ∑-equality are only allowed if the following
  -- predicate holds

  Unit ∑-allowed : Set a
  Unit ∑-allowed = Unit-allowed Œ£·µ£

  -- Restrictions imposed upon Œ†-types.

  Œ†-allowed : M ‚Üí M ‚Üí Set a
  Œ†-allowed = Œ†Œ£-allowed BMŒ†

  -- Restrictions imposed upon Œ£-types.

  Œ£-allowed : SigmaMode ‚Üí M ‚Üí M ‚Üí Set a
  Œ£-allowed = Œ†Œ£-allowed ‚àò‚Üí BMŒ£

  -- Restrictions imposed upon Œ£-types with Œ∑-equality.

  Œ£‚Çö-allowed : M ‚Üí M ‚Üí Set a
  Œ£‚Çö-allowed = Œ£-allowed Œ£‚Çö

  -- Restrictions imposed upon Œ£-types without Œ∑-equality.

  Œ£·µ£-allowed : M ‚Üí M ‚Üí Set a
  Œ£·µ£-allowed = Œ£-allowed Œ£·µ£

  -- The type Erased¬†A is only allowed if Erased-allowed holds.
  -- Note that the Erased type can be defined using either a
  -- weak or strong unit type.

  Erased-allowed : SigmaMode ‚Üí Set a
  Erased-allowed s = Unit-allowed s √ó Œ£-allowed s ùüò ùüò

  ErasedÀ¢-allowed = Erased-allowed Œ£‚Çö
  Erased ∑-allowed = Erased-allowed Œ£·µ£

  field
    -- The K rule is only allowed if the given predicate holds.
    K-allowed : Set a

    -- []-cong is only allowed if the given predicate holds.
    -- Note that []-cong can be used with the Erased type
    -- defined using either a weak or a strong unit type.
    []-cong-allowed : SigmaMode ‚Üí Set a

    -- If []-cong is allowed, then Erased is allowed.
    []-cong‚ÜíErased : ‚àÄ {s} ‚Üí []-cong-allowed s ‚Üí Erased-allowed s

    -- If []-cong is allowed, then the modality is not trivial.
    []-cong‚Üí¬¨Trivial : ‚àÄ {s} ‚Üí []-cong-allowed s ‚Üí ¬¨ Trivial

  []-congÀ¢-allowed = []-cong-allowed Œ£‚Çö
  []-cong ∑-allowed = []-cong-allowed Œ£·µ£

  -- A variant of Œ†Œ£-allowed for BindingType.

  BindingType-allowed : BindingType ‚Üí Set a
  BindingType-allowed (BM b p q) = Œ†Œ£-allowed b p q

open Type-restrictions
