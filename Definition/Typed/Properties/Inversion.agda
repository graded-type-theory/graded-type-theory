------------------------------------------------------------------------
-- Some inversion lemmas related to _‚ä¢_ and _‚ä¢_‚à∑_
------------------------------------------------------------------------

{-# OPTIONS --backtracking-instance-search #-}

open import Definition.Typed.Restrictions
open import Graded.Modality

module Definition.Typed.Properties.Inversion
  {‚Ñì} {M : Set ‚Ñì}
  {ùïÑ : Modality M}
  (R : Type-restrictions ùïÑ)
  where

open Type-restrictions R

open import Definition.Typed R
open import Definition.Typed.Properties.Well-formed R
open import Definition.Typed.Size R

open import Definition.Untyped M

open import Tools.Product
open import Tools.Size
open import Tools.Size.Instances

private variable
  Œì         : Con Term _
  A B C t u : Term _
  b         : BinderMode
  p q       : M
  s         : Size

opaque
  unfolding size-‚ä¢‚à∑

  -- An inversion lemma for Id.

  inversion-Id-‚ä¢‚à∑ :
    (‚ä¢Id : Œì ‚ä¢ Id A t u ‚à∑ B) ‚Üí
    (‚àÉ Œª (‚ä¢A : Œì ‚ä¢ A ‚à∑ B) ‚Üí size-‚ä¢‚à∑ ‚ä¢A <À¢ size-‚ä¢‚à∑ ‚ä¢Id) √ó
    (‚àÉ Œª (‚ä¢t : Œì ‚ä¢ t ‚à∑ A) ‚Üí size-‚ä¢‚à∑ ‚ä¢t <À¢ size-‚ä¢‚à∑ ‚ä¢Id) √ó
    (‚àÉ Œª (‚ä¢u : Œì ‚ä¢ u ‚à∑ A) ‚Üí size-‚ä¢‚à∑ ‚ä¢u <À¢ size-‚ä¢‚à∑ ‚ä¢Id)
  inversion-Id-‚ä¢‚à∑ (Id‚±º ‚ä¢A ‚ä¢t ‚ä¢u) = (‚ä¢A , !) , (‚ä¢t , !) , (‚ä¢u , !)
  inversion-Id-‚ä¢‚à∑ (conv ‚ä¢Id ‚â°U)  =
    let (‚ä¢A , A<) , (‚ä¢t , t<) , (‚ä¢u , u<) = inversion-Id-‚ä¢‚à∑ ‚ä¢Id in
    (conv ‚ä¢A ‚â°U , A< ‚Üô‚äï ‚óª) , (‚ä¢t , ‚Üô <À¢‚Üí‚â§À¢ t<) , (‚ä¢u , ‚Üô <À¢‚Üí‚â§À¢ u<)

opaque
  unfolding size-‚ä¢

  -- An inversion lemma for Id.

  inversion-Id-‚ä¢ :
    (‚ä¢Id : Œì ‚ä¢ Id A t u) ‚Üí
    (‚àÉ Œª (‚ä¢A : Œì ‚ä¢ A) ‚Üí size-‚ä¢ ‚ä¢A <À¢ size-‚ä¢ ‚ä¢Id) √ó
    (‚àÉ Œª (‚ä¢t : Œì ‚ä¢ t ‚à∑ A) ‚Üí size-‚ä¢‚à∑ ‚ä¢t <À¢ size-‚ä¢ ‚ä¢Id) √ó
    (‚àÉ Œª (‚ä¢u : Œì ‚ä¢ u ‚à∑ A) ‚Üí size-‚ä¢‚à∑ ‚ä¢u <À¢ size-‚ä¢ ‚ä¢Id)
  inversion-Id-‚ä¢ (Id‚±º ‚ä¢A ‚ä¢t ‚ä¢u) = (‚ä¢A , !) , (‚ä¢t , !) , (‚ä¢u , !)
  inversion-Id-‚ä¢ (univ ‚ä¢Id)     =
    let (‚ä¢A , A<) , (‚ä¢t , t<) , (‚ä¢u , u<) = inversion-Id-‚ä¢‚à∑ ‚ä¢Id in
    (univ ‚ä¢A , A< ‚Üô‚äï ‚óª) , (‚ä¢t , ‚Üô <À¢‚Üí‚â§À¢ t<) , (‚ä¢u , ‚Üô <À¢‚Üí‚â§À¢ u<)

opaque
  unfolding size-‚ä¢

  -- A variant of inversion-Id-‚ä¢.

  inversion-Id-‚ä¢-<À¢ :
    (‚àÉ Œª (‚ä¢Id : Œì ‚ä¢ Id A t u) ‚Üí size-‚ä¢ ‚ä¢Id <À¢ s) ‚Üí
    (‚àÉ Œª (‚ä¢A : Œì ‚ä¢ A) ‚Üí size-‚ä¢ ‚ä¢A <À¢ s) √ó
    (‚àÉ Œª (‚ä¢t : Œì ‚ä¢ t ‚à∑ A) ‚Üí size-‚ä¢‚à∑ ‚ä¢t <À¢ s) √ó
    (‚àÉ Œª (‚ä¢u : Œì ‚ä¢ u ‚à∑ A) ‚Üí size-‚ä¢‚à∑ ‚ä¢u <À¢ s)
  inversion-Id-‚ä¢-<À¢ (‚ä¢Id , lt) =
    let (‚ä¢A , A<) , (‚ä¢t , t<) , (‚ä¢u , u<) = inversion-Id-‚ä¢ ‚ä¢Id in
    (‚ä¢A , <À¢-trans A< lt) , (‚ä¢t , <À¢-trans t< lt) ,
    (‚ä¢u , <À¢-trans u< lt)

opaque
  unfolding size-‚ä¢‚à∑

  -- An inversion lemma for Œ†Œ£‚ü®_‚ü©_,_‚ñ∑_‚ñπ_.

  inversion-Œ†Œ£-‚ä¢‚à∑ :
    (‚ä¢Œ†Œ£ : Œì ‚ä¢ Œ†Œ£‚ü® b ‚ü© p , q ‚ñ∑ A ‚ñπ B ‚à∑ C) ‚Üí
    ‚àÉ‚ÇÇ Œª l‚ÇÅ l‚ÇÇ ‚Üí
    (‚àÉ Œª (‚ä¢A : Œì ‚ä¢ A ‚à∑ U l‚ÇÅ) ‚Üí size-‚ä¢‚à∑ ‚ä¢A <À¢ size-‚ä¢‚à∑ ‚ä¢Œ†Œ£) √ó
    (‚àÉ Œª (‚ä¢B : Œì ‚àô A ‚ä¢ B ‚à∑ U l‚ÇÇ) ‚Üí size-‚ä¢‚à∑ ‚ä¢B <À¢ size-‚ä¢‚à∑ ‚ä¢Œ†Œ£) √ó
    Œì ‚ä¢ C ‚â° U (l‚ÇÅ ‚äî·µò l‚ÇÇ) √ó
    Œ†Œ£-allowed b p q
  inversion-Œ†Œ£-‚ä¢‚à∑ (Œ†Œ£‚±º ‚ä¢A ‚ä¢B ok) =
    _ , _ , (‚ä¢A , !) , (‚ä¢B , !) , refl (U‚±º (wfTerm ‚ä¢A)) , ok
  inversion-Œ†Œ£-‚ä¢‚à∑ (conv ‚ä¢Œ†Œ£ eq‚ÇÅ) =
    let _ , _ , (‚ä¢A , A<) , (‚ä¢B , B<) , eq‚ÇÇ , ok =
          inversion-Œ†Œ£-‚ä¢‚à∑ ‚ä¢Œ†Œ£
    in
    _ , _ , (‚ä¢A , ‚Üô <À¢‚Üí‚â§À¢ A<) , (‚ä¢B , ‚Üô <À¢‚Üí‚â§À¢ B<) ,
    trans (sym eq‚ÇÅ) eq‚ÇÇ , ok

opaque
  unfolding size-‚ä¢

  -- An inversion lemma for Œ†Œ£‚ü®_‚ü©_,_‚ñ∑_‚ñπ_.

  inversion-Œ†Œ£-‚ä¢ :
    (‚ä¢Œ†Œ£ : Œì ‚ä¢ Œ†Œ£‚ü® b ‚ü© p , q ‚ñ∑ A ‚ñπ B) ‚Üí
    (‚àÉ Œª (‚ä¢A : Œì ‚ä¢ A) ‚Üí size-‚ä¢ ‚ä¢A <À¢ size-‚ä¢ ‚ä¢Œ†Œ£) √ó
    (‚àÉ Œª (‚ä¢B : Œì ‚àô A ‚ä¢ B) ‚Üí size-‚ä¢ ‚ä¢B <À¢ size-‚ä¢ ‚ä¢Œ†Œ£) √ó
    Œ†Œ£-allowed b p q
  inversion-Œ†Œ£-‚ä¢ (Œ†Œ£‚±º ‚ä¢B ok) =
    let _ , (‚ä¢A , A<) = ‚àô‚ä¢‚Üí‚ä¢-<À¢ ‚ä¢B in
    (‚ä¢A , <À¢-trans A< !) , (‚ä¢B , ‚Üô ‚óª) , ok
  inversion-Œ†Œ£-‚ä¢ (univ ‚ä¢Œ†Œ£) =
    let _ , _ , (‚ä¢A , A<) , (‚ä¢B , B<) , _ , ok = inversion-Œ†Œ£-‚ä¢‚à∑ ‚ä¢Œ†Œ£ in
    (univ ‚ä¢A , A< ‚Üô‚äï ‚óª) , (univ ‚ä¢B , B< ‚Üô‚äï ‚óª) , ok

opaque
  unfolding size-‚ä¢

  -- A variant of inversion-Œ†Œ£-‚ä¢.

  inversion-Œ†Œ£-‚ä¢-<À¢ :
    (‚àÉ Œª (‚ä¢Œ†Œ£ : Œì ‚ä¢ Œ†Œ£‚ü® b ‚ü© p , q ‚ñ∑ A ‚ñπ B) ‚Üí size-‚ä¢ ‚ä¢Œ†Œ£ <À¢ s) ‚Üí
    (‚àÉ Œª (‚ä¢A : Œì ‚ä¢ A) ‚Üí size-‚ä¢ ‚ä¢A <À¢ s) √ó
    (‚àÉ Œª (‚ä¢B : Œì ‚àô A ‚ä¢ B) ‚Üí size-‚ä¢ ‚ä¢B <À¢ s) √ó
    Œ†Œ£-allowed b p q
  inversion-Œ†Œ£-‚ä¢-<À¢ (‚ä¢Œ†Œ£ , lt) =
    let (‚ä¢A , A<) , (‚ä¢B , B<) , ok = inversion-Œ†Œ£-‚ä¢ ‚ä¢Œ†Œ£ in
    (‚ä¢A , <À¢-trans A< lt) , (‚ä¢B , <À¢-trans B< lt) , ok
