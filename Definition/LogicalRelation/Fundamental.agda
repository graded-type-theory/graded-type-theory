------------------------------------------------------------------------
-- The fundamental lemma of the logical relation for validity.
------------------------------------------------------------------------

open import Definition.Typed.EqualityRelation
open import Definition.Typed.Restrictions
open import Graded.Modality

module Definition.LogicalRelation.Fundamental
  {a} {M : Set a}
  {ùïÑ : Modality M}
  (R : Type-restrictions ùïÑ)
  {{eqrel : EqRelSet R}}
  where

open EqRelSet {{...}}
open Type-restrictions R

open import Definition.Untyped M
open import Definition.Untyped.Properties M

open import Definition.Typed R
open import Definition.LogicalRelation R
open import Definition.LogicalRelation.Hidden R
open import Definition.LogicalRelation.Irrelevance R
open import Definition.LogicalRelation.Properties R
open import Definition.LogicalRelation.Substitution R
open import Definition.LogicalRelation.Substitution.Escape R
open import Definition.LogicalRelation.Substitution.Properties R
open import Definition.LogicalRelation.Substitution.Introductions R
import Definition.LogicalRelation.Substitution.Introductions.Erased R
  as Erased
import Definition.LogicalRelation.Substitution.Irrelevance R as S
open import Definition.LogicalRelation.Substitution.Weakening R

import Graded.Derived.Erased.Untyped ùïÑ as E

open import Tools.Function
open import Tools.Level
open import Tools.Product
open import Tools.Unit
open import Tools.Nat using (Nat)
import Tools.PropositionalEquality as PE

private
  variable
    m n : Nat
    Œì : Con Term n
    Œî : Con Term m
    œÉ œÉ‚ÇÅ œÉ‚ÇÇ œÉ‚Ä≤ : Subst m n
    A A‚ÇÅ A‚ÇÇ B t t‚ÇÅ t‚ÇÇ u : Term _
    ‚ä©Œì : ‚ä©·µõ _

opaque
 unfolding _‚ä©·µõ‚ü®_‚ü©_ _‚ä©·µõ‚ü®_‚ü©_‚â°_ _‚ä©·µõ‚ü®_‚ü©_‚à∑_ _‚ä©·µõ‚ü®_‚ü©_‚â°_‚à∑_

 mutual
  -- Fundamental theorem for contexts.
  valid : ‚ä¢ Œì ‚Üí ‚ä©·µõ Œì
  valid Œµ = Œµ
  valid (‚ä¢Œì ‚àô A) = let [Œì] , [A] = fundamental A in [Œì] ‚àô [A]


  -- Fundamental theorem for types.
  fundamental : ‚àÄ {A} (‚ä¢A : Œì ‚ä¢ A) ‚Üí Œ£ (‚ä©·µõ Œì) (Œª [Œì] ‚Üí Œì ‚ä©·µõ‚ü® ¬π ‚ü© A / [Œì])
  fundamental (‚Ñï‚±º ‚ä¢Œì) =
    ‚Ñï·µõ (valid ‚ä¢Œì)
  fundamental (Empty‚±º x) = Empty·µõ (valid x)
  fundamental (Unit‚±º ‚ä¢Œì ok) =
    Unit·µõ (valid ‚ä¢Œì) ok
  fundamental (U‚±º ‚ä¢Œì) =
    ‚ä©·µõU (valid ‚ä¢Œì)
  fundamental (Œ†Œ£‚±º ‚ä¢A ‚ä¢B ok) =
    Œ†Œ£·µõ ok (fundamental ‚ä¢A) (fundamental ‚ä¢B)
  fundamental (Id‚±º ‚ä¢t ‚ä¢u) =
    Id·µõ (fundamentalTerm ‚ä¢t) (fundamentalTerm ‚ä¢u)
  fundamental (univ ‚ä¢A) =
    ‚ä©·µõ‚à∑U‚Üí‚ä©·µõ (fundamentalTerm ‚ä¢A)

  -- Fundamental theorem for type equality.
  fundamentalEq : ‚àÄ {A B} ‚Üí Œì ‚ä¢ A ‚â° B
    ‚Üí ‚àÉ  Œª ([Œì] : ‚ä©·µõ Œì)
    ‚Üí ‚àÉ‚ÇÇ Œª ([A] : Œì ‚ä©·µõ‚ü® ¬π ‚ü© A / [Œì]) ([B] : Œì ‚ä©·µõ‚ü® ¬π ‚ü© B / [Œì])
    ‚Üí Œì ‚ä©·µõ‚ü® ¬π ‚ü© A ‚â° B / [Œì] / [A]
  fundamentalEq (univ A‚â°B) =
    ‚ä©·µõ‚â°‚à∑U‚Üí‚ä©·µõ‚â° (fundamentalTermEq A‚â°B)
  fundamentalEq (refl ‚ä¢A) =
    refl-‚ä©·µõ‚â° (fundamental ‚ä¢A)
  fundamentalEq (sym A‚â°B) =
    sym-‚ä©·µõ‚â° (fundamentalEq A‚â°B)
  fundamentalEq (trans A‚â°B B‚â°C) =
    trans-‚ä©·µõ‚â° (fundamentalEq A‚â°B) (fundamentalEq B‚â°C)
  fundamentalEq (Œ†Œ£-cong _ A‚ÇÅ‚â°A‚ÇÇ B‚ÇÅ‚â°B‚ÇÇ ok) =
    Œ†Œ£-cong·µõ ok (fundamentalEq A‚ÇÅ‚â°A‚ÇÇ) (fundamentalEq B‚ÇÅ‚â°B‚ÇÇ)
  fundamentalEq (Id-cong A‚ÇÅ‚â°A‚ÇÇ t‚ÇÅ‚â°t‚ÇÇ u‚ÇÅ‚â°u‚ÇÇ) =
    Id-cong·µõ (fundamentalEq A‚ÇÅ‚â°A‚ÇÇ) (fundamentalTermEq t‚ÇÅ‚â°t‚ÇÇ)
      (fundamentalTermEq u‚ÇÅ‚â°u‚ÇÇ)

  -- Fundamental theorem for terms.
  fundamentalTerm : ‚àÄ {A t} ‚Üí Œì ‚ä¢ t ‚à∑ A
    ‚Üí ‚àÉ Œª ([Œì] : ‚ä©·µõ Œì)
    ‚Üí ‚àÉ Œª ([A] : Œì ‚ä©·µõ‚ü® ¬π ‚ü© A / [Œì])
    ‚Üí Œì ‚ä©·µõ‚ü® ¬π ‚ü© t ‚à∑ A / [Œì] / [A]
  fundamentalTerm (‚Ñï‚±º ‚ä¢Œì) =
    ‚Ñï·µó·µõ (valid ‚ä¢Œì)
  fundamentalTerm (Empty‚±º x) =
    Empty·µó·µõ (valid x)
  fundamentalTerm (Unit‚±º ‚ä¢Œì ok) =
    Unit·µó·µõ (valid ‚ä¢Œì) ok
  fundamentalTerm (Œ†Œ£‚±º {G = B} ‚ä¢A ‚ä¢B ok) =
    Œ†Œ£·µó·µõ {B = B} ok (fundamentalTerm ‚ä¢A) (fundamentalTerm ‚ä¢B)
  fundamentalTerm (var ‚ä¢Œì x‚ààŒì) =
    emb-‚ä©·µõ‚à∑ ‚â§¬π (var·µõ x‚ààŒì (valid ‚ä¢Œì) .proj‚ÇÇ)
  fundamentalTerm (lam‚±º {t} ‚ä¢A ‚ä¢t ok) =
    lam·µõ {t = t} ok (fundamental ‚ä¢A) (fundamentalTerm ‚ä¢t)
  fundamentalTerm (_‚àò‚±º_ {t = t} ‚ä¢t ‚ä¢u) =
    ‚àò·µõ {t = t} (fundamentalTerm ‚ä¢t) (fundamentalTerm ‚ä¢u)
  fundamentalTerm (prod‚±º {u} _ ‚ä¢B ‚ä¢t ‚ä¢u ok) =
    prod·µõ {u = u} ok (fundamental ‚ä¢B) (fundamentalTerm ‚ä¢t)
      (fundamentalTerm ‚ä¢u)
  fundamentalTerm (fst‚±º {t} _ _ ‚ä¢t) =
    fst·µõ {t = t} (fundamentalTerm ‚ä¢t)
  fundamentalTerm (snd‚±º _ _ ‚ä¢t) =
    snd·µõ (fundamentalTerm ‚ä¢t)
  fundamentalTerm (zero‚±º ‚ä¢Œì) =
    zero·µõ (valid ‚ä¢Œì)
  fundamentalTerm (suc‚±º {n = t} ‚ä¢t) =
    suc·µõ {t = t} (fundamentalTerm ‚ä¢t)
  fundamentalTerm (natrec‚±º {z = t} {s = u} ‚ä¢A ‚ä¢t ‚ä¢u ‚ä¢v) =
    natrec·µõ {t = t} {u = u} (fundamental ‚ä¢A) (fundamentalTerm ‚ä¢t)
      (fundamentalTerm ‚ä¢u) (fundamentalTerm ‚ä¢v)
  fundamentalTerm (emptyrec‚±º {t = t} ‚ä¢A ‚ä¢t) =
    emptyrec·µõ {t = t} (fundamental ‚ä¢A) (fundamentalTerm ‚ä¢t)
  fundamentalTerm (star‚±º ‚ä¢Œì ok) =
    star·µõ (valid ‚ä¢Œì) ok
  fundamentalTerm (conv {t} ‚ä¢t A‚â°B) =
    conv-‚ä©·µõ‚à∑ {t = t} (fundamentalEq A‚â°B) (fundamentalTerm ‚ä¢t)
  fundamentalTerm (prodrec‚±º {u} _ _ ‚ä¢C ‚ä¢t ‚ä¢u _) =
    prodrec·µõ {u = u} (fundamental ‚ä¢C) (fundamentalTerm ‚ä¢t)
      (fundamentalTerm ‚ä¢u)
  fundamentalTerm (unitrec‚±º {u} ‚ä¢A ‚ä¢t ‚ä¢u _) =
    unitrec·µõ {u = u} (fundamental ‚ä¢A) (fundamentalTerm ‚ä¢t)
      (fundamentalTerm ‚ä¢u)
  fundamentalTerm (Id‚±º {t} {u} ‚ä¢A ‚ä¢t ‚ä¢u) =
    Id·µó·µõ {t = t} {u = u} (fundamentalTerm ‚ä¢A) (fundamentalTerm ‚ä¢t)
      (fundamentalTerm ‚ä¢u)
  fundamentalTerm (rfl‚±º ‚ä¢t) =
    rfl·µõ (fundamentalTerm ‚ä¢t)
  fundamentalTerm (J‚±º {u} _ _ ‚ä¢B ‚ä¢u _ ‚ä¢w) =
    J·µõ {u = u} (fundamental ‚ä¢B) (fundamentalTerm ‚ä¢u)
      (fundamentalTerm ‚ä¢w)
  fundamentalTerm (K‚±º {u} _ ‚ä¢B ‚ä¢u ‚ä¢v ok) =
    K·µõ {u = u} ok (fundamental ‚ä¢B) (fundamentalTerm ‚ä¢u)
      (fundamentalTerm ‚ä¢v)
  fundamentalTerm ([]-cong‚±º {v} ‚ä¢t ‚ä¢u ‚ä¢v ok) =
    []-cong·µõ {v = v} ok (fundamentalTerm ‚ä¢v)

  -- Fundamental theorem for term equality.
  fundamentalTermEq : ‚àÄ {A t t‚Ä≤} ‚Üí Œì ‚ä¢ t ‚â° t‚Ä≤ ‚à∑ A
                    ‚Üí ‚àÉ Œª ([Œì] : ‚ä©·µõ Œì) ‚Üí
                      [ Œì ‚ä©·µõ‚ü® ¬π ‚ü© t ‚â° t‚Ä≤ ‚à∑ A / [Œì] ]
  fundamentalTermEq (refl ‚ä¢t) =
    refl-‚ä©·µõ‚â°‚à∑ (fundamentalTerm ‚ä¢t)
  fundamentalTermEq (sym t‚â°u) =
    sym-‚ä©·µõ‚â°‚à∑ (fundamentalTermEq t‚â°u)
  fundamentalTermEq (trans t‚â°u u‚â°v) =
    trans-‚ä©·µõ‚â°‚à∑ (fundamentalTermEq t‚â°u) (fundamentalTermEq u‚â°v)
  fundamentalTermEq (conv t‚â°u A‚â°B) =
    conv-‚ä©·µõ‚â°‚à∑ (fundamentalEq A‚â°B) (fundamentalTermEq t‚â°u)
  fundamentalTermEq (Œ†Œ£-cong _ A‚ÇÅ‚â°A‚ÇÇ B‚ÇÅ‚â°B‚ÇÇ ok) =
    Œ†Œ£-cong·µó·µõ ok (fundamentalTermEq A‚ÇÅ‚â°A‚ÇÇ) (fundamentalTermEq B‚ÇÅ‚â°B‚ÇÇ)
  fundamentalTermEq (app-cong t‚ÇÅ‚â°t‚ÇÇ u‚ÇÅ‚â°u‚ÇÇ) =
    ‚àò-cong·µõ (fundamentalTermEq t‚ÇÅ‚â°t‚ÇÇ) (fundamentalTermEq u‚ÇÅ‚â°u‚ÇÇ)
  fundamentalTermEq (Œ≤-red _ _ ‚ä¢t ‚ä¢u PE.refl ok) =
    Œ≤-red·µõ ok (fundamentalTerm ‚ä¢t) (fundamentalTerm ‚ä¢u)
  fundamentalTermEq (Œ∑-eq _ ‚ä¢t‚ÇÅ ‚ä¢t‚ÇÇ wk1-t‚ÇÅ‚àò0‚â°wk1-t‚ÇÇ‚àò0) =
    Œ∑-eq·µõ (fundamentalTerm ‚ä¢t‚ÇÅ) (fundamentalTerm ‚ä¢t‚ÇÇ)
      (fundamentalTermEq wk1-t‚ÇÅ‚àò0‚â°wk1-t‚ÇÇ‚àò0)
  fundamentalTermEq (suc-cong t‚â°u) =
    suc-cong·µõ (fundamentalTermEq t‚â°u)
  fundamentalTermEq (natrec-cong _ A‚ÇÅ‚â°A‚ÇÇ t‚ÇÅ‚â°t‚ÇÇ u‚ÇÅ‚â°u‚ÇÇ v‚ÇÅ‚â°v‚ÇÇ) =
    natrec-cong·µõ (fundamentalEq A‚ÇÅ‚â°A‚ÇÇ) (fundamentalTermEq t‚ÇÅ‚â°t‚ÇÇ)
      (fundamentalTermEq u‚ÇÅ‚â°u‚ÇÇ) (fundamentalTermEq v‚ÇÅ‚â°v‚ÇÇ)
  fundamentalTermEq (natrec-zero ‚ä¢A ‚ä¢t ‚ä¢u) =
    natrec-zero·µõ (fundamental ‚ä¢A) (fundamentalTerm ‚ä¢t)
      (fundamentalTerm ‚ä¢u)
  fundamentalTermEq (natrec-suc ‚ä¢A ‚ä¢t ‚ä¢u ‚ä¢v) =
    natrec-suc·µõ (fundamental ‚ä¢A) (fundamentalTerm ‚ä¢t)
      (fundamentalTerm ‚ä¢u) (fundamentalTerm ‚ä¢v)
  fundamentalTermEq (emptyrec-cong F‚â°F‚Ä≤ n‚â°n‚Ä≤) =
    emptyrec-cong·µõ (fundamentalEq F‚â°F‚Ä≤) (fundamentalTermEq n‚â°n‚Ä≤)
  fundamentalTermEq (Œ∑-unit ‚ä¢t ‚ä¢u Œ∑) =
    Œ∑-unit·µõ (fundamentalTerm ‚ä¢t) (fundamentalTerm ‚ä¢u) Œ∑
  fundamentalTermEq (fst-cong _ _ t‚ÇÅ‚â°t‚ÇÇ) =
    fst-cong·µõ (fundamentalTermEq t‚ÇÅ‚â°t‚ÇÇ)
  fundamentalTermEq (snd-cong _ _ t‚ÇÅ‚â°t‚ÇÇ) =
    snd-cong·µõ (fundamentalTermEq t‚ÇÅ‚â°t‚ÇÇ)
  fundamentalTermEq (prod-cong _ ‚ä¢B t‚ÇÅ‚â°t‚ÇÇ u‚ÇÅ‚â°u‚ÇÇ ok) =
    prod-cong·µõ ok (fundamental ‚ä¢B) (fundamentalTermEq t‚ÇÅ‚â°t‚ÇÇ)
      (fundamentalTermEq u‚ÇÅ‚â°u‚ÇÇ)
  fundamentalTermEq (Œ£-Œ≤‚ÇÅ _ ‚ä¢B ‚ä¢t ‚ä¢u PE.refl ok) =
    Œ£-Œ≤‚ÇÅ·µõ ok (fundamental ‚ä¢B) (fundamentalTerm ‚ä¢t) (fundamentalTerm ‚ä¢u)
  fundamentalTermEq (Œ£-Œ≤‚ÇÇ _ ‚ä¢B ‚ä¢t ‚ä¢u PE.refl ok) =
    Œ£-Œ≤‚ÇÇ·µõ ok (fundamental ‚ä¢B) (fundamentalTerm ‚ä¢t) (fundamentalTerm ‚ä¢u)
  fundamentalTermEq (Œ£-Œ∑ _ _ ‚ä¢t‚ÇÅ ‚ä¢t‚ÇÇ fst-t‚ÇÅ‚â°fst-t‚ÇÇ snd-t‚ÇÅ‚â°snd-t‚ÇÇ) =
    Œ£-Œ∑·µõ (fundamentalTerm ‚ä¢t‚ÇÅ) (fundamentalTerm ‚ä¢t‚ÇÇ)
      (fundamentalTermEq fst-t‚ÇÅ‚â°fst-t‚ÇÇ)
      (fundamentalTermEq snd-t‚ÇÅ‚â°snd-t‚ÇÇ)
  fundamentalTermEq (prodrec-cong _ _ C‚ÇÅ‚â°C‚ÇÇ t‚ÇÅ‚â°t‚ÇÇ u‚ÇÅ‚â°u‚ÇÇ _) =
    prodrec-cong·µõ (fundamentalEq C‚ÇÅ‚â°C‚ÇÇ) (fundamentalTermEq t‚ÇÅ‚â°t‚ÇÇ)
      (fundamentalTermEq u‚ÇÅ‚â°u‚ÇÇ)
  fundamentalTermEq (prodrec-Œ≤ _ _ ‚ä¢C ‚ä¢t ‚ä¢u ‚ä¢v PE.refl _) =
    prodrec-Œ≤·µõ (fundamental ‚ä¢C) (fundamentalTerm ‚ä¢t)
      (fundamentalTerm ‚ä¢u) (fundamentalTerm ‚ä¢v)
  fundamentalTermEq (unitrec-cong A‚ÇÅ‚â°A‚ÇÇ t‚ÇÅ‚â°t‚ÇÇ u‚ÇÅ‚â°u‚ÇÇ _ _) =
    unitrec-cong·µõ (fundamentalEq A‚ÇÅ‚â°A‚ÇÇ) (fundamentalTermEq t‚ÇÅ‚â°t‚ÇÇ)
      (fundamentalTermEq u‚ÇÅ‚â°u‚ÇÇ)
  fundamentalTermEq (unitrec-Œ≤ ‚ä¢A ‚ä¢u _ no-Œ∑) =
    unitrec-Œ≤·µõ (fundamental ‚ä¢A) (fundamentalTerm ‚ä¢u) no-Œ∑
  fundamentalTermEq (unitrec-Œ≤-Œ∑ ‚ä¢A ‚ä¢t ‚ä¢u _ Œ∑) =
    unitrec-Œ≤-Œ∑·µõ (fundamental ‚ä¢A) (fundamentalTerm ‚ä¢t)
      (fundamentalTerm ‚ä¢u) Œ∑
  fundamentalTermEq (Id-cong A‚ÇÅ‚â°A‚ÇÇ t‚ÇÅ‚â°t‚ÇÇ u‚ÇÅ‚â°u‚ÇÇ) =
    Id-cong·µó·µõ (fundamentalTermEq A‚ÇÅ‚â°A‚ÇÇ) (fundamentalTermEq t‚ÇÅ‚â°t‚ÇÇ)
      (fundamentalTermEq u‚ÇÅ‚â°u‚ÇÇ)
  fundamentalTermEq (J-cong _ A‚ÇÅ‚â°A‚ÇÇ _ t‚ÇÅ‚â°t‚ÇÇ B‚ÇÅ‚â°B‚ÇÇ u‚ÇÅ‚â°u‚ÇÇ v‚ÇÅ‚â°v‚ÇÇ w‚ÇÅ‚â°w‚ÇÇ) =
    J-cong·µõ (fundamentalEq A‚ÇÅ‚â°A‚ÇÇ) (fundamentalTermEq t‚ÇÅ‚â°t‚ÇÇ)
      (fundamentalEq B‚ÇÅ‚â°B‚ÇÇ) (fundamentalTermEq u‚ÇÅ‚â°u‚ÇÇ)
      (fundamentalTermEq v‚ÇÅ‚â°v‚ÇÇ) (fundamentalTermEq w‚ÇÅ‚â°w‚ÇÇ)
  fundamentalTermEq (K-cong A‚ÇÅ‚â°A‚ÇÇ _ t‚ÇÅ‚â°t‚ÇÇ B‚ÇÅ‚â°B‚ÇÇ u‚ÇÅ‚â°u‚ÇÇ v‚ÇÅ‚â°v‚ÇÇ ok) =
    K-cong·µõ ok (fundamentalEq A‚ÇÅ‚â°A‚ÇÇ) (fundamentalTermEq t‚ÇÅ‚â°t‚ÇÇ)
      (fundamentalEq B‚ÇÅ‚â°B‚ÇÇ) (fundamentalTermEq u‚ÇÅ‚â°u‚ÇÇ)
      (fundamentalTermEq v‚ÇÅ‚â°v‚ÇÇ)
  fundamentalTermEq ([]-cong-cong A‚ÇÅ‚â°A‚ÇÇ t‚ÇÅ‚â°t‚ÇÇ u‚ÇÅ‚â°u‚ÇÇ v‚ÇÅ‚â°v‚ÇÇ ok) =
    []-cong-cong·µõ ok (fundamentalEq A‚ÇÅ‚â°A‚ÇÇ) (fundamentalTermEq t‚ÇÅ‚â°t‚ÇÇ)
      (fundamentalTermEq u‚ÇÅ‚â°u‚ÇÇ) (fundamentalTermEq v‚ÇÅ‚â°v‚ÇÇ)
  fundamentalTermEq (J-Œ≤ _ ‚ä¢t ‚ä¢B ‚ä¢u PE.refl) =
    J-Œ≤·µõ (fundamentalTerm ‚ä¢t) (fundamental ‚ä¢B) (fundamentalTerm ‚ä¢u)
  fundamentalTermEq (K-Œ≤ _ ‚ä¢B ‚ä¢u ok) =
    K-Œ≤·µõ ok (fundamental ‚ä¢B) (fundamentalTerm ‚ä¢u)
  fundamentalTermEq ([]-cong-Œ≤ ‚ä¢t PE.refl ok) =
    []-cong-Œ≤·µõ ok (fundamentalTerm ‚ä¢t)

-- Fundamental theorem for substitutions.
fundamentalSubst : (‚ä¢Œì : ‚ä¢ Œì) (‚ä¢Œî : ‚ä¢ Œî)
      ‚Üí Œî ‚ä¢À¢ œÉ ‚à∑ Œì
      ‚Üí ‚àÉ Œª [Œì] ‚Üí Œî ‚ä©À¢ œÉ ‚à∑ Œì / [Œì] / ‚ä¢Œî
fundamentalSubst Œµ ‚ä¢Œî [œÉ] = Œµ , lift tt
fundamentalSubst (‚ä¢Œì ‚àô ‚ä¢A) ‚ä¢Œî ([tailœÉ] , [headœÉ]) =
  let [Œì] , [A] = fundamental ‚ä¢A
      [Œî] , [A]‚Ä≤ , [t] = fundamentalTerm [headœÉ]
      [Œì]‚Ä≤ , [œÉ] = fundamentalSubst ‚ä¢Œì ‚ä¢Œî [tailœÉ]
      [tailœÉ]‚Ä≤ = S.irrelevanceSubst [Œì]‚Ä≤ [Œì] ‚ä¢Œî ‚ä¢Œî [œÉ]
      [idA]  = proj‚ÇÅ (unwrap [A]‚Ä≤ (soundContext [Œî]) (idSubstS [Œî]))
      [idA]‚Ä≤ = proj‚ÇÅ (unwrap [A] ‚ä¢Œî [tailœÉ]‚Ä≤)
      [idt]  = proj‚ÇÅ ([t] (soundContext [Œî]) (idSubstS [Œî]))
  in  [Œì] ‚àô [A] , ([tailœÉ]‚Ä≤
  ,   irrelevanceTerm‚Ä≥ (subst-id _) (subst-id _) [idA] [idA]‚Ä≤ [idt])

-- Fundamental theorem for substitution equality.
fundamentalSubstEq : (‚ä¢Œì : ‚ä¢ Œì) (‚ä¢Œî : ‚ä¢ Œî)
      ‚Üí Œî ‚ä¢À¢ œÉ ‚â° œÉ‚Ä≤ ‚à∑ Œì
      ‚Üí ‚àÉ‚ÇÇ Œª [Œì] [œÉ]
      ‚Üí ‚àÉ  Œª ([œÉ‚Ä≤] : Œî ‚ä©À¢ œÉ‚Ä≤ ‚à∑ Œì / [Œì] / ‚ä¢Œî)
      ‚Üí Œî ‚ä©À¢ œÉ ‚â° œÉ‚Ä≤ ‚à∑ Œì / [Œì] / ‚ä¢Œî / [œÉ]
fundamentalSubstEq Œµ ‚ä¢Œî œÉ = Œµ , lift tt , lift tt , lift tt
fundamentalSubstEq (‚ä¢Œì ‚àô ‚ä¢A) ‚ä¢Œî (tailœÉ‚â°œÉ‚Ä≤ , headœÉ‚â°œÉ‚Ä≤) =
  let [Œì] , [A] = fundamental ‚ä¢A
      [Œì]‚Ä≤ , [tailœÉ] , [tailœÉ‚Ä≤] , [tailœÉ‚â°œÉ‚Ä≤] = fundamentalSubstEq ‚ä¢Œì ‚ä¢Œî tailœÉ‚â°œÉ‚Ä≤
      [Œî] , modelsTermEq [A]‚Ä≤ [t] [t‚Ä≤] [t‚â°t‚Ä≤] = fundamentalTermEq headœÉ‚â°œÉ‚Ä≤
      [tailœÉ]‚Ä≤ = S.irrelevanceSubst [Œì]‚Ä≤ [Œì] ‚ä¢Œî ‚ä¢Œî [tailœÉ]
      [tailœÉ‚Ä≤]‚Ä≤ = S.irrelevanceSubst [Œì]‚Ä≤ [Œì] ‚ä¢Œî ‚ä¢Œî [tailœÉ‚Ä≤]
      [tailœÉ‚â°œÉ‚Ä≤]‚Ä≤ = S.irrelevanceSubstEq [Œì]‚Ä≤ [Œì] ‚ä¢Œî ‚ä¢Œî [tailœÉ] [tailœÉ]‚Ä≤ [tailœÉ‚â°œÉ‚Ä≤]
      [idA]  = proj‚ÇÅ (unwrap [A]‚Ä≤ (soundContext [Œî]) (idSubstS [Œî]))
      [idA]‚Ä≤ = proj‚ÇÅ (unwrap [A] ‚ä¢Œî [tailœÉ]‚Ä≤)
      [idA]‚Ä≥ = proj‚ÇÅ (unwrap [A] ‚ä¢Œî [tailœÉ‚Ä≤]‚Ä≤)
      [idt]  = proj‚ÇÅ ([t] (soundContext [Œî]) (idSubstS [Œî]))
      [idt‚Ä≤] = proj‚ÇÅ ([t‚Ä≤] (soundContext [Œî]) (idSubstS [Œî]))
      [idt‚â°t‚Ä≤]  = [t‚â°t‚Ä≤] (soundContext [Œî]) (idSubstS [Œî])
  in  [Œì] ‚àô [A]
  ,   ([tailœÉ]‚Ä≤ , irrelevanceTerm‚Ä≥ (subst-id _) (subst-id _) [idA] [idA]‚Ä≤ [idt])
  ,   ([tailœÉ‚Ä≤]‚Ä≤ , convTerm‚ÇÅ [idA]‚Ä≤ [idA]‚Ä≥
                             (proj‚ÇÇ (unwrap [A] ‚ä¢Œî [tailœÉ]‚Ä≤) [tailœÉ‚Ä≤]‚Ä≤ [tailœÉ‚â°œÉ‚Ä≤]‚Ä≤)
                             (irrelevanceTerm‚Ä≥ (subst-id _) (subst-id _)
                                                [idA] [idA]‚Ä≤ [idt‚Ä≤]))
  ,   ([tailœÉ‚â°œÉ‚Ä≤]‚Ä≤ , irrelevanceEqTerm‚Ä≥ (subst-id _) (subst-id _) (subst-id _)
                                         [idA] [idA]‚Ä≤ [idt‚â°t‚Ä≤])

opaque
  unfolding _‚ä©·µõ‚ü®_‚ü©_

  -- A variant of fundamental.

  fundamental-‚ä©·µõ : Œì ‚ä¢ A ‚Üí Œì ‚ä©·µõ‚ü® ¬π ‚ü© A
  fundamental-‚ä©·µõ = fundamental

opaque
  unfolding _‚ä©·µõ‚ü®_‚ü©_‚â°_

  -- A variant of fundamentalEq.

  fundamental-‚ä©·µõ‚â° : Œì ‚ä¢ A ‚â° B ‚Üí Œì ‚ä©·µõ‚ü® ¬π ‚ü© A ‚â° B
  fundamental-‚ä©·µõ‚â° = fundamentalEq

opaque
  unfolding _‚ä©·µõ‚ü®_‚ü©_‚à∑_

  -- A variant of fundamentalTerm.

  fundamental-‚ä©·µõ‚à∑ : Œì ‚ä¢ t ‚à∑ A ‚Üí Œì ‚ä©·µõ‚ü® ¬π ‚ü© t ‚à∑ A
  fundamental-‚ä©·µõ‚à∑ = fundamentalTerm

opaque
  unfolding _‚ä©·µõ‚ü®_‚ü©_‚â°_‚à∑_

  -- A variant of fundamentalTermEq.

  fundamental-‚ä©·µõ‚â°‚à∑ : Œì ‚ä¢ t ‚â° u ‚à∑ A ‚Üí Œì ‚ä©·µõ‚ü® ¬π ‚ü© t ‚â° u ‚à∑ A
  fundamental-‚ä©·µõ‚â°‚à∑ = fundamentalTermEq

opaque
  unfolding _‚ä©À¢_‚à∑_

  -- A variant of fundamentalSubst.

  fundamental-‚ä©À¢‚à∑ : ‚ä¢ Œî ‚Üí ‚ä¢ Œì ‚Üí Œî ‚ä¢À¢ œÉ ‚à∑ Œì ‚Üí Œî ‚ä©À¢ œÉ ‚à∑ Œì
  fundamental-‚ä©À¢‚à∑ ‚ä¢Œî ‚ä¢Œì ‚ä¢œÉ =
    case fundamentalSubst ‚ä¢Œì ‚ä¢Œî ‚ä¢œÉ of Œª
      (_ , ‚ä©œÉ) ‚Üí
    _ , _ , ‚ä©œÉ

opaque
  unfolding _‚ä©À¢_‚â°_‚à∑_

  -- A variant of fundamentalSubstEq.

  fundamental-‚ä©À¢‚â°‚à∑ : ‚ä¢ Œî ‚Üí ‚ä¢ Œì ‚Üí Œî ‚ä¢À¢ œÉ‚ÇÅ ‚â° œÉ‚ÇÇ ‚à∑ Œì ‚Üí Œî ‚ä©À¢ œÉ‚ÇÅ ‚â° œÉ‚ÇÇ ‚à∑ Œì
  fundamental-‚ä©À¢‚â°‚à∑ ‚ä¢Œî ‚ä¢Œì œÉ‚ÇÅ‚â°œÉ‚ÇÇ =
    case fundamentalSubstEq ‚ä¢Œì ‚ä¢Œî œÉ‚ÇÅ‚â°œÉ‚ÇÇ of Œª
      (_ , œÉ‚ÇÅ‚â°œÉ‚ÇÇ) ‚Üí
    _ , _ , œÉ‚ÇÅ‚â°œÉ‚ÇÇ
