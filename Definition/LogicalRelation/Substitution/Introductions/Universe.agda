------------------------------------------------------------------------
-- Validity of the universe type.
------------------------------------------------------------------------

open import Definition.Typed.EqualityRelation
open import Definition.Typed.Restrictions
open import Graded.Modality

module Definition.LogicalRelation.Substitution.Introductions.Universe
  {a} {M : Set a}
  {ùïÑ : Modality M}
  (R : Type-restrictions ùïÑ)
  {{eqrel : EqRelSet R}}
  where

open EqRelSet {{...}}
open Type-restrictions R

open import Definition.Typed R
open import Definition.Typed.Properties R
open import Definition.Typed.Well-formed R
open import Definition.Untyped M
open import Definition.Untyped.Whnf M type-variant
open import Definition.LogicalRelation R
open import Definition.LogicalRelation.Hidden R
open import Definition.LogicalRelation.Irrelevance R
open import Definition.LogicalRelation.Properties R
open import Definition.LogicalRelation.ShapeView R
open import Definition.LogicalRelation.Substitution R

open import Tools.Function
open import Tools.Nat using (Nat; 1+; 2+)
open import Tools.Product as Œ£
import Tools.PropositionalEquality as PE

private
  variable
    m n  : Nat
    Œì    : Cons m n
    A B  : Term n
    l l‚Ä≤ : Universe-level
    k    : LogRelKit

------------------------------------------------------------------------
-- Some characterisation lemmas

private

  -- A lemma used below.

  U‚áí*U‚Üí‚â° : Œì ‚ä¢ U l ‚áí* U l‚Ä≤ ‚Üí l PE.‚â° l‚Ä≤
  U‚áí*U‚Üí‚â° {Œì} {l} {l‚Ä≤} =
    Œì ‚ä¢ U l ‚áí* U l‚Ä≤  ‚Üí‚ü® flip whnfRed* U‚Çô ‚ü©
    U l PE.‚â° U l‚Ä≤    ‚Üí‚ü® (Œª { PE.refl ‚Üí PE.refl }) ‚ü©
    l PE.‚â° l‚Ä≤        ‚ñ°

opaque

  -- A characterisation lemma for _‚ä©‚ü®_‚ü©_.

  ‚ä©U‚áî :
    Œì ‚ä©‚ü® l ‚ü© U l‚Ä≤ ‚áî
    (l‚Ä≤ <·µò l √ó ‚ä¢ Œì)
  ‚ä©U‚áî =
      (Œª ‚ä©U ‚Üí
        case U-view ‚ä©U of Œª {
          (U·µ£ (U·µ£ _ l‚Ä≤<l U‚áí*U)) ‚Üí
        case U‚áí*U‚Üí‚â° U‚áí*U of Œª {
          PE.refl ‚Üí
        l‚Ä≤<l , wfEq (subset* U‚áí*U) }})
    , (Œª (l‚Ä≤<l , ‚ä¢Œì) ‚Üí
        U·µ£ (U·µ£ _ l‚Ä≤<l (id (U‚±º ‚ä¢Œì))))

opaque
  unfolding _‚ä©‚ü®_‚ü©_‚â°_

  -- A characterisation lemma for _‚ä©‚ü®_‚ü©_‚â°_.

  ‚ä©U‚â°‚áî :
    Œì ‚ä©‚ü® l ‚ü© U l‚Ä≤ ‚â° A ‚áî
    (l‚Ä≤ <·µò l √ó Œì ‚ä¢ A ‚áí* U l‚Ä≤)
  ‚ä©U‚â°‚áî =
      (Œª (‚ä©U , _ , U‚â°A) ‚Üí
        case U-view ‚ä©U of Œª {
          (U·µ£ (U·µ£ _ p U‚áí*U)) ‚Üí
        case U‚áí*U‚Üí‚â° U‚áí*U of Œª {
          PE.refl ‚Üí
        p , U‚â°A }})
    , (Œª (p , A‚áí*U) ‚Üí
         let _ , ‚ä¢U = wf-‚ä¢‚â° (subset* A‚áí*U) in
           U·µ£ (U·µ£ _ p (id ‚ä¢U))
         , wf-‚ä©‚â° (‚ä©-‚áê* A‚áí*U (‚ä©U‚áî .proj‚ÇÇ (p , wf ‚ä¢U))) .proj‚ÇÅ
         , A‚áí*U)

opaque
  unfolding _‚ä©‚ü®_‚ü©_‚â°_ _‚ä©‚ü®_‚ü©_‚â°_‚à∑_

  -- A characterisation lemma for _‚ä©‚ü®_‚ü©_‚â°_‚à∑_.

  ‚ä©‚â°‚à∑U‚áî :
    Œì ‚ä©‚ü® l ‚ü© A ‚â° B ‚à∑ U l‚Ä≤ ‚áî
    (l‚Ä≤ <·µò l √ó Œì ‚ä©‚ü® l‚Ä≤ ‚ü© A ‚â° B √ó
     ‚àÉ‚ÇÇ Œª A‚Ä≤ B‚Ä≤ ‚Üí
     Œì ‚ä¢ A ‚áí* A‚Ä≤ ‚à∑ U l‚Ä≤ √ó
     Œì ‚ä¢ B ‚áí* B‚Ä≤ ‚à∑ U l‚Ä≤ √ó
     Type‚Çó (Œì .defs) A‚Ä≤ √ó
     Type‚Çó (Œì .defs) B‚Ä≤ √ó
     Œì ‚ä¢ A‚Ä≤ ‚âÖ B‚Ä≤ ‚à∑ U l‚Ä≤)
  ‚ä©‚â°‚à∑U‚áî =
      (Œª (‚ä©U , A‚â°B) ‚Üí
        case U-view ‚ä©U of Œª {
          (U·µ£ (U·µ£ _ l‚Ä≤<l U‚áí*U)) ‚Üí
        case A‚â°B of Œª
          (U‚Çú‚Çå _ _ A‚áí*A‚Ä≤ B‚áí*B‚Ä≤ A‚Ä≤-type B‚Ä≤-type A‚Ä≤‚âÖB‚Ä≤ ‚ä©A ‚ä©B A‚â°B) ‚Üí
        case U‚áí*U‚Üí‚â° U‚áí*U of Œª {
          PE.refl ‚Üí
          l‚Ä≤<l
        , ( ‚ä©<‚áî‚ä© l‚Ä≤<l .proj‚ÇÅ ‚ä©A
          , ‚ä©<‚áî‚ä© l‚Ä≤<l .proj‚ÇÅ ‚ä©B
          , ‚ä©<‚â°‚áî‚ä©‚â° l‚Ä≤<l .proj‚ÇÅ A‚â°B
          )
        , _ , _ , A‚áí*A‚Ä≤ , B‚áí*B‚Ä≤ , A‚Ä≤-type , B‚Ä≤-type , A‚Ä≤‚âÖB‚Ä≤ }})
    , (Œª (l‚Ä≤<l , (‚ä©A , ‚ä©B , A‚â°B) , _ , _ ,
          A‚áí*A‚Ä≤ , B‚áí*B‚Ä≤ , A‚Ä≤-type , B‚Ä≤-type , A‚Ä≤‚âÖB‚Ä≤) ‚Üí
         let ‚ä©A = ‚ä©<‚áî‚ä© l‚Ä≤<l .proj‚ÇÇ ‚ä©A
             ‚ä©B = ‚ä©<‚áî‚ä© l‚Ä≤<l .proj‚ÇÇ ‚ä©B
         in
           U·µ£ (U·µ£ _ l‚Ä≤<l (id (U‚±º (wfEqTerm (subset*Term A‚áí*A‚Ä≤)))))
         , U‚Çú‚Çå _ _ A‚áí*A‚Ä≤ B‚áí*B‚Ä≤ A‚Ä≤-type B‚Ä≤-type A‚Ä≤‚âÖB‚Ä≤ ‚ä©A ‚ä©B
             (‚ä©<‚â°‚áî‚ä©‚â°‚Ä≤ l‚Ä≤<l .proj‚ÇÇ A‚â°B))

opaque

  -- A variant of ‚ä©‚â°‚à∑U‚áî.

  Type‚Üí‚ä©‚â°‚à∑U‚áî :
    Type‚Çó (Œì .defs) A ‚Üí
    Type‚Çó (Œì .defs) B ‚Üí
    Œì ‚ä©‚ü® l ‚ü© A ‚â° B ‚à∑ U l‚Ä≤ ‚áî
    (l‚Ä≤ <·µò l √ó (Œì ‚ä©‚ü® l‚Ä≤ ‚ü© A ‚â° B) √ó Œì ‚ä¢ A ‚âÖ B ‚à∑ U l‚Ä≤)
  Type‚Üí‚ä©‚â°‚à∑U‚áî {Œì} {A} {B} {l} {l‚Ä≤} A-type B-type =
    Œì ‚ä©‚ü® l ‚ü© A ‚â° B ‚à∑ U l‚Ä≤          ‚áî‚ü® ‚ä©‚â°‚à∑U‚áî ‚ü©

    l‚Ä≤ <·µò l √ó (Œì ‚ä©‚ü® l‚Ä≤ ‚ü© A ‚â° B) √ó
    (‚àÉ‚ÇÇ Œª A‚Ä≤ B‚Ä≤ ‚Üí
     Œì ‚ä¢ A ‚áí* A‚Ä≤ ‚à∑ U l‚Ä≤ √ó
     Œì ‚ä¢ B ‚áí* B‚Ä≤ ‚à∑ U l‚Ä≤ √ó
     Type‚Çó (Œì .defs) A‚Ä≤ √ó
     Type‚Çó (Œì .defs) B‚Ä≤ √ó
     Œì ‚ä¢ A‚Ä≤ ‚âÖ B‚Ä≤ ‚à∑ U l‚Ä≤)           ‚áî‚ü® (Œª (l‚Ä≤<l , A‚â°B , A‚Ä≤ , B‚Ä≤ , DA , DB , A‚Ä≤-type , B‚Ä≤-type , A‚Ä≤‚âÖB‚Ä≤) ‚Üí
                                         case whnfRed*Term DA (typeWhnf A-type) of Œª {
                                           PE.refl ‚Üí
                                         case whnfRed*Term DB (typeWhnf B-type) of Œª {
                                           PE.refl ‚Üí
                                         (l‚Ä≤<l , A‚â°B , A‚Ä≤‚âÖB‚Ä≤)}})
                                    , (Œª (l‚Ä≤<l , A‚â°B , A‚âÖB) ‚Üí
                                         let _ , ‚ä¢A , ‚ä¢B = wf-‚ä¢‚â°‚à∑ (‚âÖ‚Çú-eq A‚âÖB) in
                                           l‚Ä≤<l , A‚â°B , _ , _ , id ‚ä¢A , id ‚ä¢B
                                         , A-type , B-type , A‚âÖB)
                                    ‚ü©
    l‚Ä≤ <·µò l √ó (Œì ‚ä©‚ü® l‚Ä≤ ‚ü© A ‚â° B) √ó
    Œì ‚ä¢ A ‚âÖ B ‚à∑ U l‚Ä≤               ‚ñ°‚áî

opaque

  -- A characterisation lemma for _‚ä©‚ü®_‚ü©_‚à∑_.

  ‚ä©‚à∑U‚áî :
    Œì ‚ä©‚ü® l ‚ü© A ‚à∑ U l‚Ä≤ ‚áî
    (l‚Ä≤ <·µò l √ó Œì ‚ä©‚ü® l‚Ä≤ ‚ü© A √ó
     ‚àÉ Œª B ‚Üí Œì ‚ä¢ A ‚áí* B ‚à∑ U l‚Ä≤ √ó Type‚Çó (Œì .defs) B √ó Œì ‚ä¢‚âÖ B ‚à∑ U l‚Ä≤)
  ‚ä©‚à∑U‚áî {Œì} {l} {A} {l‚Ä≤} =
    Œì ‚ä©‚ü® l ‚ü© A ‚à∑ U l‚Ä≤                                                ‚áî‚ü® ‚ä©‚à∑‚áî‚ä©‚â°‚à∑ ‚ü©

    Œì ‚ä©‚ü® l ‚ü© A ‚â° A ‚à∑ U l‚Ä≤                                            ‚áî‚ü® ‚ä©‚â°‚à∑U‚áî ‚ü©

    (l‚Ä≤ <·µò l √ó Œì ‚ä©‚ü® l‚Ä≤ ‚ü© A ‚â° A √ó
     ‚àÉ‚ÇÇ Œª A‚Ä≤ A‚Ä≥ ‚Üí
     Œì ‚ä¢ A ‚áí* A‚Ä≤ ‚à∑ U l‚Ä≤ √ó
     Œì ‚ä¢ A ‚áí* A‚Ä≥ ‚à∑ U l‚Ä≤ √ó
     Type‚Çó (Œì .defs) A‚Ä≤ √ó
     Type‚Çó (Œì .defs) A‚Ä≥ √ó
     Œì ‚ä¢ A‚Ä≤ ‚âÖ A‚Ä≥ ‚à∑ U l‚Ä≤)                                             ‚áî‚ü® (Œ£-cong-‚áî Œª _ ‚Üí sym‚áî ‚ä©‚áî‚ä©‚â° √ó-cong-‚áî
                                                                           ( (Œª (_ , _ , A‚áí*A‚Ä≤ , _ , A‚Ä≤-type , _ , A‚Ä≤‚âÖA‚Ä≥) ‚Üí
                                                                                _ , A‚áí*A‚Ä≤ , A‚Ä≤-type , wf-‚ä¢‚âÖ‚à∑ A‚Ä≤‚âÖA‚Ä≥ .proj‚ÇÅ)
                                                                           , (Œª (_ , A‚áí*B , B-type , ‚âÖB) ‚Üí
                                                                                _ , _ , A‚áí*B , A‚áí*B , B-type , B-type , ‚âÖB)
                                                                           )) ‚ü©
    (l‚Ä≤ <·µò l √ó Œì ‚ä©‚ü® l‚Ä≤ ‚ü© A √ó
     ‚àÉ Œª B ‚Üí Œì ‚ä¢ A ‚áí* B ‚à∑ U l‚Ä≤ √ó Type‚Çó (Œì .defs) B √ó Œì ‚ä¢‚âÖ B ‚à∑ U l‚Ä≤)  ‚ñ°‚áî

opaque

  -- A variant of ‚ä©‚à∑U‚áî.

  Type‚Üí‚ä©‚à∑U‚áî :
    Type‚Çó (Œì .defs) A ‚Üí
    Œì ‚ä©‚ü® l ‚ü© A ‚à∑ U l‚Ä≤ ‚áî
    (l‚Ä≤ <·µò l √ó (Œì ‚ä©‚ü® l‚Ä≤ ‚ü© A) √ó Œì ‚ä¢‚âÖ A ‚à∑ U l‚Ä≤)
  Type‚Üí‚ä©‚à∑U‚áî {Œì} {A} {l} {l‚Ä≤} A-type =
    Œì ‚ä©‚ü® l ‚ü© A ‚à∑ U l‚Ä≤                                                ‚áî‚ü® ‚ä©‚à∑U‚áî ‚ü©

    l‚Ä≤ <·µò l √ó (Œì ‚ä©‚ü® l‚Ä≤ ‚ü© A) √ó
    (‚àÉ Œª B ‚Üí Œì ‚ä¢ A ‚áí* B ‚à∑ U l‚Ä≤ √ó Type‚Çó (Œì .defs) B √ó Œì ‚ä¢‚âÖ B ‚à∑ U l‚Ä≤)  ‚áî‚ü® id‚áî
                                                                          √ó-cong-‚áî
                                                                        id‚áî
                                                                          √ó-cong-‚áî
                                                                        ( (Œª (_ , A‚áí*B , _ , B‚âÖB) ‚Üí
                                                                            case whnfRed*Term A‚áí*B (typeWhnf A-type) of Œª {
                                                                              PE.refl ‚Üí
                                                                            B‚âÖB })
                                                                        , (Œª ‚âÖA ‚Üí _ , id (wf-‚ä¢‚â°‚à∑ (‚âÖ‚Çú-eq ‚âÖA) .proj‚ÇÇ .proj‚ÇÅ) , A-type , ‚âÖA)
                                                                        )
                                                                      ‚ü©

    l‚Ä≤ <·µò l √ó (Œì ‚ä©‚ü® l‚Ä≤ ‚ü© A) √ó Œì ‚ä¢‚âÖ A ‚à∑ U l‚Ä≤                          ‚ñ°‚áî

------------------------------------------------------------------------
-- Validity

opaque

  -- Validity of¬†U.

  ‚ä©·µõU : ‚ä©·µõ Œì ‚Üí Œì ‚ä©·µõ‚ü® 1+ l ‚ü© U l
  ‚ä©·µõU {Œì} {l} ‚ä©Œì =
    ‚ä©·µõ‚áî ∞ .proj‚ÇÇ
      ( ‚ä©Œì
      , Œª {_} {‚àá} {_} Œæ‚äá {_} {Œî} {œÉ‚ÇÅ} {œÉ‚ÇÇ} ‚Üí
          ‚àá ¬ª Œî ‚ä©À¢ œÉ‚ÇÅ ‚â° œÉ‚ÇÇ ‚à∑ Œì .vars      ‚Üí‚ü® proj‚ÇÅ ‚àò‚Üí escape-‚ä©À¢‚â°‚à∑ ‚ü©
          ‚àá ¬ª‚ä¢ Œî                          ‚Üí‚ü® (Œª ‚ä¢Œî ‚Üí ‚â§·µò-refl , id (U‚±º ‚ä¢Œî)) ‚ü©
          l <·µò 1+ l √ó ‚àá ¬ª Œî ‚ä¢ U l ‚áí* U l  ‚áîÀò‚ü® ‚ä©U‚â°‚áî ‚ü©‚Üí
          ‚àá ¬ª Œî ‚ä©‚ü® 1+ l ‚ü© U l ‚â° U l       ‚ñ°
      )

opaque

  -- Validity of U, seen as a term former.

  ‚ä©·µõU‚à∑U : ‚ä©·µõ Œì ‚Üí Œì ‚ä©·µõ‚ü® 2+ l ‚ü© U l ‚à∑ U (1+ l)
  ‚ä©·µõU‚à∑U {Œì} {l} ‚ä©Œì =
    ‚ä©·µõ‚à∑‚áî ∞ .proj‚ÇÇ
      ( ‚ä©·µõU ‚ä©Œì
      , Œª {_} {‚àá} {_} Œæ‚äá {_} {Œî} {œÉ‚ÇÅ} {œÉ‚ÇÇ} ‚Üí
          ‚àá ¬ª Œî ‚ä©À¢ œÉ‚ÇÅ ‚â° œÉ‚ÇÇ ‚à∑ Œì .vars                                      ‚Üí‚ü® proj‚ÇÅ ‚àò‚Üí escape-‚ä©À¢‚â°‚à∑ ‚ü©

          ‚àá ¬ª‚ä¢ Œî                                                          ‚Üí‚ü® (Œª ‚ä¢Œî ‚Üí ‚â§·µò-refl , ‚ä©U‚áî .proj‚ÇÇ (‚â§·µò-refl , ‚ä¢Œî) , ‚âÖ-Urefl ‚ä¢Œî) ‚ü©

          1+ l <·µò 2+ l √ó (‚àá ¬ª Œî ‚ä©‚ü® 1+ l ‚ü© U l) √ó ‚àá ¬ª Œî ‚ä¢‚âÖ U l ‚à∑ U (1+ l)  ‚Üí‚ü® Type‚Üí‚ä©‚à∑U‚áî U‚Çô .proj‚ÇÇ ‚ü©

          ‚àá ¬ª Œî ‚ä©‚ü® 2+ l ‚ü© U l ‚à∑ U (1+ l)                                  ‚Üí‚ü® refl-‚ä©‚â°‚à∑ ‚ü©

          ‚àá ¬ª Œî ‚ä©‚ü® 2+ l ‚ü© U l ‚â° U l ‚à∑ U (1+ l)                            ‚ñ°
      )

opaque

  -- Validity of one of the typing rules called univ.

  ‚ä©·µõ‚â°‚à∑U‚Üí‚ä©·µõ‚â° :
    Œì ‚ä©·µõ‚ü® l ‚ü© A ‚â° B ‚à∑ U l‚Ä≤ ‚Üí
    Œì ‚ä©·µõ‚ü® l‚Ä≤ ‚ü© A ‚â° B
  ‚ä©·µõ‚â°‚à∑U‚Üí‚ä©·µõ‚â° A‚â°B‚à∑U =
    case ‚ä©·µõ‚â°‚à∑‚áî ∞ .proj‚ÇÅ A‚â°B‚à∑U of Œª
      (‚ä©U , A‚â°B‚à∑U) ‚Üí
    ‚ä©·µõ‚â°‚áî ∞ .proj‚ÇÇ
      ( wf-‚ä©·µõ ‚ä©U
      , Œª Œæ‚äá ‚Üí proj‚ÇÅ ‚àò‚Üí proj‚ÇÇ ‚àò‚Üí ‚ä©‚â°‚à∑U‚áî .proj‚ÇÅ ‚àò‚Üí A‚â°B‚à∑U Œæ‚äá
      )

opaque

  -- Validity of another of the typing rules called univ.

  ‚ä©·µõ‚à∑U‚Üí‚ä©·µõ :
    Œì ‚ä©·µõ‚ü® l ‚ü© A ‚à∑ U l‚Ä≤ ‚Üí
    Œì ‚ä©·µõ‚ü® l‚Ä≤ ‚ü© A
  ‚ä©·µõ‚à∑U‚Üí‚ä©·µõ = ‚ä©·µõ‚áî‚ä©·µõ‚â° .proj‚ÇÇ ‚àò‚Üí ‚ä©·µõ‚â°‚à∑U‚Üí‚ä©·µõ‚â° ‚àò‚Üí ‚ä©·µõ‚à∑‚áî‚ä©·µõ‚â°‚à∑ .proj‚ÇÅ
