------------------------------------------------------------------------
-- Validity for Erased and [_]
------------------------------------------------------------------------

open import Definition.Typed.EqualityRelation
open import Definition.Typed.Restrictions
open import Graded.Modality
open import Tools.Product

module Definition.LogicalRelation.Substitution.Introductions.Erased
  {a} {M : Set a}
  {ùïÑ : Modality M}
  (open Modality ùïÑ)
  (R : Type-restrictions ùïÑ)
  (open Type-restrictions R)
  -- Erased is assumed to be allowed.
  {s}
  (Erased-ok@(Unit-ok , Œ£-ok) : Erased-allowed s)
  ‚¶É eqrel : EqRelSet R ‚¶Ñ
  where

open import Definition.LogicalRelation R
open import Definition.LogicalRelation.Hidden R
open import
  Definition.LogicalRelation.Substitution.Introductions.Pi-Sigma R
open import
  Definition.LogicalRelation.Substitution.Introductions.Sigma R
open import Definition.LogicalRelation.Substitution.Introductions.Unit R
open import Definition.Typed.Properties R
open import Definition.Untyped M

open import Graded.Derived.Erased.Untyped ùïÑ s

open import Tools.Function
import Tools.PropositionalEquality as PE

private variable
  Œì           : Con Term _
  A A‚ÇÅ A‚ÇÇ t u : Term _
  l           : TypeLevel

opaque

  -- Reducibility for Erased.

  ‚ä©Erased : Œì ‚ä©‚ü® l ‚ü© A ‚Üí Œì ‚ä©‚ü® l ‚ü© Erased A
  ‚ä©Erased ‚ä©A =
    ‚ä©Œ†Œ£‚áî .proj‚ÇÇ
      ( Œ£-ok
      , wf (escape-‚ä© ‚ä©A)
      , Œª œÅ‚äá ‚ä¢Œî ‚Üí
            wk-‚ä© œÅ‚äá ‚ä¢Œî ‚ä©A
          , Œª _ ‚Üí refl-‚ä©‚â° (‚ä©Unit ‚ä¢Œî Unit-ok)
      )

opaque

  -- Reducibility of equality between applications of Erased.

  ‚ä©Erased‚â°Erased :
    Œì ‚ä©‚ü® l ‚ü© A‚ÇÅ ‚â° A‚ÇÇ ‚Üí
    Œì ‚ä©‚ü® l ‚ü© Erased A‚ÇÅ ‚â° Erased A‚ÇÇ
  ‚ä©Erased‚â°Erased A‚ÇÅ‚â°A‚ÇÇ =
    case wf-‚ä©‚â° A‚ÇÅ‚â°A‚ÇÇ of Œª
      (‚ä©A‚ÇÅ , ‚ä©A‚ÇÇ) ‚Üí
    ‚ä©Œ†Œ£‚â°Œ†Œ£‚áî .proj‚ÇÇ
      ( ‚ä©Erased ‚ä©A‚ÇÅ
      , ‚ä©Erased ‚ä©A‚ÇÇ
      , PE.refl , PE.refl , PE.refl
      , Œª œÅ‚äá ‚ä¢Œî ‚Üí
            wk-‚ä©‚â° œÅ‚äá ‚ä¢Œî A‚ÇÅ‚â°A‚ÇÇ
          , Œª _ ‚Üí refl-‚ä©‚â° (‚ä©Unit ‚ä¢Œî Unit-ok)
      )

opaque

  -- Validity of Erased.

  Erased·µõ :
    Œì ‚ä©·µõ‚ü® l ‚ü© A ‚Üí
    Œì ‚ä©·µõ‚ü® l ‚ü© Erased A
  Erased·µõ ‚ä©A =
    case ‚ä©·µõ‚áî .proj‚ÇÅ ‚ä©A of Œª
      (‚ä©Œì , A‚â°A) ‚Üí
    ‚ä©·µõ‚áî .proj‚ÇÇ (‚ä©Œì , ‚ä©Erased‚â°Erased ‚àò‚Üí A‚â°A)

opaque

  -- Validity of equality preservation for Erased.

  Erased-cong·µõ :
    Œì ‚ä©·µõ‚ü® l ‚ü© A‚ÇÅ ‚â° A‚ÇÇ ‚Üí
    Œì ‚ä©·µõ‚ü® l ‚ü© Erased A‚ÇÅ ‚â° Erased A‚ÇÇ
  Erased-cong·µõ A‚ÇÅ‚â°A‚ÇÇ =
    case ‚ä©·µõ‚â°‚áî‚Ä≤ .proj‚ÇÅ A‚ÇÅ‚â°A‚ÇÇ of Œª
      (‚ä©A‚ÇÅ , ‚ä©A‚ÇÇ , A‚ÇÅ‚â°A‚ÇÇ) ‚Üí
    ‚ä©·µõ‚â°‚áî‚Ä≤ .proj‚ÇÇ (Erased·µõ ‚ä©A‚ÇÅ , Erased·µõ ‚ä©A‚ÇÇ , ‚ä©Erased‚â°Erased ‚àò‚Üí A‚ÇÅ‚â°A‚ÇÇ)

opaque

  -- Reducibility of equality between applications of [_].

  ‚ä©[]‚â°[] :
    Œì ‚ä©‚ü® l ‚ü© t ‚â° u ‚à∑ A ‚Üí
    Œì ‚ä©‚ü® l ‚ü© [ t ] ‚â° [ u ] ‚à∑ Erased A
  ‚ä©[]‚â°[] {l} t‚â°u =
    case wf-‚ä©‚à∑ (wf-‚ä©‚â°‚à∑ t‚â°u .proj‚ÇÅ) of Œª
      ‚ä©A ‚Üí
    ‚ä©prod‚â°prod (‚ä©Erased ‚ä©A) t‚â°u
      (refl-‚ä©‚â°‚à∑ (‚ä©star {l = l} (wf (escape-‚ä© ‚ä©A)) Unit-ok))

opaque

  -- Reducibility for [_].

  ‚ä©[] :
    Œì ‚ä©‚ü® l ‚ü© t ‚à∑ A ‚Üí
    Œì ‚ä©‚ü® l ‚ü© [ t ] ‚à∑ Erased A
  ‚ä©[] ‚ä©t =
    wf-‚ä©‚â°‚à∑ (‚ä©[]‚â°[] (refl-‚ä©‚â°‚à∑ ‚ä©t)) .proj‚ÇÅ

opaque

  -- Validity of [_].

  []·µõ :
    Œì ‚ä©·µõ‚ü® l ‚ü© t ‚à∑ A ‚Üí
    Œì ‚ä©·µõ‚ü® l ‚ü© [ t ] ‚à∑ Erased A
  []·µõ ‚ä©t =
    case ‚ä©·µõ‚à∑‚áî .proj‚ÇÅ ‚ä©t of Œª
      (‚ä©A , t‚â°t) ‚Üí
    ‚ä©·µõ‚à∑‚áî .proj‚ÇÇ (Erased·µõ ‚ä©A , ‚ä©[]‚â°[] ‚àò‚Üí t‚â°t)

opaque

  -- Validity of equality preservation for [_].

  []-cong·µõ :
    Œì ‚ä©·µõ‚ü® l ‚ü© t ‚â° u ‚à∑ A ‚Üí
    Œì ‚ä©·µõ‚ü® l ‚ü© [ t ] ‚â° [ u ] ‚à∑ Erased A
  []-cong·µõ t‚â°u =
    case ‚ä©·µõ‚â°‚à∑‚áî‚Ä≤ .proj‚ÇÅ t‚â°u of Œª
      (‚ä©t , ‚ä©u , t‚â°u) ‚Üí
    ‚ä©·µõ‚â°‚à∑‚áî‚Ä≤ .proj‚ÇÇ ([]·µõ ‚ä©t , []·µõ ‚ä©u , ‚ä©[]‚â°[] ‚àò‚Üí t‚â°u)
