------------------------------------------------------------------------
-- Validity of emptyrec.
------------------------------------------------------------------------

open import Definition.Typed.EqualityRelation
open import Definition.Typed.Restrictions
open import Graded.Modality

module Definition.LogicalRelation.Substitution.Introductions.Emptyrec
  {a} {M : Set a}
  {ùïÑ : Modality M}
  (R : Type-restrictions ùïÑ)
  {{eqrel : EqRelSet R}}
  where

open EqRelSet {{...}}
open Type-restrictions R

open import Definition.Untyped M as U hiding (wk)
open import Definition.Untyped.Neutral M type-variant
open import Definition.Typed R
import Definition.Typed.Weakening R as T
open import Definition.Typed.Properties R
open import Definition.Typed.RedSteps R
open import Definition.Typed.Reasoning.Reduction R
open import Definition.LogicalRelation R
open import Definition.LogicalRelation.Hidden R
open import Definition.LogicalRelation.Irrelevance R
open import Definition.LogicalRelation.Properties R
open import Definition.LogicalRelation.Substitution R
open import Definition.LogicalRelation.Substitution.Introductions.Empty R

open import Tools.Function
open import Tools.Product


import Tools.PropositionalEquality as PE

private
  variable
    Œì Œî : Con Term _
    A A‚ÇÅ A‚ÇÇ t t‚ÇÅ t‚ÇÇ : Term _
    l l‚Ä≤ : Universe-level
    œÉ œÉ‚ÇÅ œÉ‚ÇÇ : Subst _ _
    p : M


------------------------------------------------------------------------
-- The eliminator emptyrec

opaque

  -- Reducibility of equality between applications of emptyrec.

  ‚ä©emptyrec‚â°emptyrec :
    Œì ‚ä©·µõ‚ü® l ‚ü© A‚ÇÅ ‚â° A‚ÇÇ ‚Üí
    Œì ‚ä©·µõ‚ü® l‚Ä≤ ‚ü© t‚ÇÅ ‚â° t‚ÇÇ ‚à∑ Empty ‚Üí
    Œî ‚ä©À¢ œÉ‚ÇÅ ‚â° œÉ‚ÇÇ ‚à∑ Œì ‚Üí
    Œî ‚ä©‚ü® l ‚ü© emptyrec p A‚ÇÅ t‚ÇÅ [ œÉ‚ÇÅ ] ‚â° emptyrec p A‚ÇÇ t‚ÇÇ [ œÉ‚ÇÇ ] ‚à∑ A‚ÇÅ [ œÉ‚ÇÅ ]
  ‚ä©emptyrec‚â°emptyrec
    {A‚ÇÅ} {A‚ÇÇ} {t‚ÇÅ} {t‚ÇÇ} {œÉ‚ÇÅ} {œÉ‚ÇÇ} {p}
    A‚ÇÅ‚â°A‚ÇÇ t‚ÇÅ‚â°t‚ÇÇ œÉ‚ÇÅ‚â°œÉ‚ÇÇ =
    case ‚ä©·µõ‚â°‚Üí‚ä©À¢‚â°‚à∑‚Üí‚ä©[]‚â°[] A‚ÇÅ‚â°A‚ÇÇ of Œª
      A‚ÇÅ‚â°A‚ÇÇ ‚Üí
    case ‚ä©·µõ‚â°‚à∑‚Üí‚ä©À¢‚â°‚à∑‚Üí‚ä©[]‚â°[]‚à∑ t‚ÇÅ‚â°t‚ÇÇ of Œª
      t‚ÇÅ‚â°t‚ÇÇ ‚Üí
    case ‚ä©‚â°‚à∑Empty‚áî .proj‚ÇÅ (t‚ÇÅ‚â°t‚ÇÇ œÉ‚ÇÅ‚â°œÉ‚ÇÇ) of Œª
      (_ , _ , Empty‚Çú‚Çå t‚ÇÅ‚Ä≤ t‚ÇÇ‚Ä≤ t‚ÇÅ[œÉ‚ÇÅ]‚áí*t‚ÇÅ‚Ä≤ t‚ÇÇ[œÉ‚ÇÇ]‚áí*t‚ÇÇ‚Ä≤ _ rest)  ‚Üí
    case A‚ÇÅ‚â°A‚ÇÇ œÉ‚ÇÅ‚â°œÉ‚ÇÇ of Œª
      A‚ÇÅ[œÉ‚ÇÅ]‚â°A‚ÇÇ[œÉ‚ÇÇ] ‚Üí
    case escape-‚ä©‚â° A‚ÇÅ[œÉ‚ÇÅ]‚â°A‚ÇÇ[œÉ‚ÇÇ] of Œª
      ‚ä¢A‚ÇÅ[œÉ‚ÇÅ]‚â°A‚ÇÇ[œÉ‚ÇÇ] ‚Üí
    case wf-‚ä©‚â° A‚ÇÅ[œÉ‚ÇÅ]‚â°A‚ÇÇ[œÉ‚ÇÇ] of Œª
      (‚ä©A‚ÇÅ[œÉ‚ÇÅ] , ‚ä©A‚ÇÇ[œÉ‚ÇÇ]) ‚Üí
    case escape ‚ä©A‚ÇÅ[œÉ‚ÇÅ] of Œª
      ‚ä¢A‚ÇÅ[œÉ‚ÇÅ] ‚Üí
    case escape ‚ä©A‚ÇÇ[œÉ‚ÇÇ] of Œª
      ‚ä¢A‚ÇÇ[œÉ‚ÇÇ] ‚Üí
    case rest of Œª where
      (ne (neNf‚Çú‚Çå t‚ÇÅ‚Ä≤-ne t‚ÇÇ‚Ä≤-ne t‚ÇÅ‚Ä≤~t‚ÇÇ‚Ä≤)) ‚Üí
        emptyrec p (A‚ÇÅ [ œÉ‚ÇÅ ]) (t‚ÇÅ [ œÉ‚ÇÅ ]) ‚à∑ A‚ÇÅ [ œÉ‚ÇÅ ] ‚áí*‚ü® emptyrec-subst* t‚ÇÅ[œÉ‚ÇÅ]‚áí*t‚ÇÅ‚Ä≤ ‚ä¢A‚ÇÅ[œÉ‚ÇÅ] ‚ü©‚ä©‚à∑‚à∑
        emptyrec p (A‚ÇÅ [ œÉ‚ÇÅ ]) t‚ÇÅ‚Ä≤         ‚à∑ A‚ÇÅ [ œÉ‚ÇÅ ] ‚â°‚ü® neutral-‚ä©‚â°‚à∑ ‚ä©A‚ÇÅ[œÉ‚ÇÅ]
                                                             (emptyrec‚Çô t‚ÇÅ‚Ä≤-ne) (emptyrec‚Çô t‚ÇÇ‚Ä≤-ne)
                                                             (~-emptyrec ‚ä¢A‚ÇÅ[œÉ‚ÇÅ]‚â°A‚ÇÇ[œÉ‚ÇÇ] t‚ÇÅ‚Ä≤~t‚ÇÇ‚Ä≤) ‚ü©‚ä©‚à∑‚à∑‚áê*
                                                         ‚ü® ‚âÖ-eq ‚ä¢A‚ÇÅ[œÉ‚ÇÅ]‚â°A‚ÇÇ[œÉ‚ÇÇ] ‚ü©‚áí
        emptyrec p (A‚ÇÇ [ œÉ‚ÇÇ ]) t‚ÇÇ‚Ä≤         ‚à∑ A‚ÇÇ [ œÉ‚ÇÇ ] ‚áê*‚ü® emptyrec-subst* t‚ÇÇ[œÉ‚ÇÇ]‚áí*t‚ÇÇ‚Ä≤ ‚ä¢A‚ÇÇ[œÉ‚ÇÇ] ‚ü©‚àé‚à∑
        emptyrec p (A‚ÇÇ [ œÉ‚ÇÇ ]) (t‚ÇÇ [ œÉ‚ÇÇ ])             ‚àé

opaque

  -- Validity of equality between applications of emptyrec

  emptyrec-cong·µõ :
    Œì ‚ä©·µõ‚ü® l ‚ü© A‚ÇÅ ‚â° A‚ÇÇ ‚Üí
    Œì ‚ä©·µõ‚ü® l‚Ä≤ ‚ü© t‚ÇÅ ‚â° t‚ÇÇ ‚à∑ Empty ‚Üí
    Œì ‚ä©·µõ‚ü® l ‚ü© emptyrec p A‚ÇÅ t‚ÇÅ ‚â° emptyrec p A‚ÇÇ t‚ÇÇ ‚à∑ A‚ÇÅ
  emptyrec-cong·µõ A‚ÇÅ‚â°A‚ÇÇ t‚ÇÅ‚â°t‚ÇÇ =
    ‚ä©·µõ‚â°‚à∑‚áî .proj‚ÇÇ
      ( wf-‚ä©·µõ‚â° A‚ÇÅ‚â°A‚ÇÇ .proj‚ÇÅ
      , ‚ä©emptyrec‚â°emptyrec A‚ÇÅ‚â°A‚ÇÇ t‚ÇÅ‚â°t‚ÇÇ
      )

opaque

  -- Validity of emptyrec.

  emptyrec·µõ :
    Œì ‚ä©·µõ‚ü® l ‚ü© A ‚Üí
    Œì ‚ä©·µõ‚ü® l‚Ä≤ ‚ü© t ‚à∑ Empty ‚Üí
    Œì ‚ä©·µõ‚ü® l ‚ü© emptyrec p A t ‚à∑ A
  emptyrec·µõ ‚ä©A ‚ä©t =
    ‚ä©·µõ‚à∑‚áî‚ä©·µõ‚â°‚à∑ .proj‚ÇÇ $
    emptyrec-cong·µõ (refl-‚ä©·µõ‚â° ‚ä©A) (refl-‚ä©·µõ‚â°‚à∑ ‚ä©t)
