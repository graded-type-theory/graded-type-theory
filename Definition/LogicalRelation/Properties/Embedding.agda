------------------------------------------------------------------------
-- Some embedding lemmas
------------------------------------------------------------------------

open import Definition.Typed.EqualityRelation
open import Definition.Typed.Restrictions
open import Graded.Modality

module Definition.LogicalRelation.Properties.Embedding
  {a} {M : Set a}
  {ùïÑ : Modality M}
  (R : Type-restrictions ùïÑ)
  {{eqrel : EqRelSet R}}
  where

open EqRelSet {{...}}

open import Definition.Untyped M
open import Definition.LogicalRelation R
open import Definition.LogicalRelation.Properties.Kit R
open import Definition.LogicalRelation.Irrelevance R

open import Tools.Nat using (Nat)

private
  variable
    m n     : Nat
    Œì       : Cons m n
    A B t u : Term n
    l‚ÇÅ l‚ÇÇ   : Universe-level

opaque

  -- An embedding lemma for _‚ä©‚ü®_‚ü©_‚à∑_/_.

  emb-‚â§-‚ä©‚à∑ :
    {‚ä©A : Œì ‚ä©‚ü® l‚ÇÅ ‚ü© A} {p : l‚ÇÅ ‚â§·µò l‚ÇÇ} ‚Üí
    Œì ‚ä©‚ü® l‚ÇÅ ‚ü© t ‚à∑ A / ‚ä©A ‚Üí
    Œì ‚ä©‚ü® l‚ÇÇ ‚ü© t ‚à∑ A / emb-‚â§-‚ä© p ‚ä©A
  emb-‚â§-‚ä©‚à∑ {‚ä©A} {p} = irrelevanceTerm ‚ä©A (emb-‚â§-‚ä© p ‚ä©A)

opaque

  -- An embedding lemma for _‚ä©‚ü®_‚ü©_‚â°_/_.

  emb-‚â§-‚ä©‚â° :
    {‚ä©A : Œì ‚ä©‚ü® l‚ÇÅ ‚ü© A} {p : l‚ÇÅ ‚â§·µò l‚ÇÇ} ‚Üí
    Œì ‚ä©‚ü® l‚ÇÅ ‚ü© A ‚â° B / ‚ä©A ‚Üí Œì ‚ä©‚ü® l‚ÇÇ ‚ü© A ‚â° B / emb-‚â§-‚ä© p ‚ä©A
  emb-‚â§-‚ä©‚â° {‚ä©A} {p} = irrelevanceEq ‚ä©A (emb-‚â§-‚ä© p ‚ä©A)

opaque

  -- An embedding lemma for _‚ä©‚ü®_‚ü©_‚â°_‚à∑_/_.

  emb-‚â§-‚ä©‚â°‚à∑ :
    {‚ä©A : Œì ‚ä©‚ü® l‚ÇÅ ‚ü© A} {p : l‚ÇÅ ‚â§·µò l‚ÇÇ} ‚Üí
    Œì ‚ä©‚ü® l‚ÇÅ ‚ü© t ‚â° u ‚à∑ A / ‚ä©A ‚Üí Œì ‚ä©‚ü® l‚ÇÇ ‚ü© t ‚â° u ‚à∑ A / emb-‚â§-‚ä© p ‚ä©A
  emb-‚â§-‚ä©‚â°‚à∑ {‚ä©A} {p} = irrelevanceEqTerm ‚ä©A (emb-‚â§-‚ä© p ‚ä©A)
