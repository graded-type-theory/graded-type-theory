------------------------------------------------------------------------
-- Some embedding lemmas
------------------------------------------------------------------------

open import Definition.Typed.EqualityRelation
open import Definition.Typed.Restrictions
open import Graded.Modality

module Definition.LogicalRelation.Properties.Embedding
  {a} {M : Set a}
  {ùïÑ : Modality M}
  (R : Type-restrictions ùïÑ)
  {{eqrel : EqRelSet R}}
  where

open EqRelSet {{...}}

open import Definition.Untyped M
open import Definition.Untyped.Properties M
open import Definition.LogicalRelation R
open import Definition.LogicalRelation.Properties.Kit R
open import Definition.LogicalRelation.Irrelevance R

open import Tools.Function
open import Tools.Nat using (Nat)

private
  variable
    m n     : Nat
    Œì       : Cons m n
    A B t u : Term n
    l‚ÇÅ l‚ÇÇ   : Universe-level

opaque

  -- If l‚ÇÅ <·µò l‚ÇÇ, then Œì ‚ä©‚ü® l‚ÇÅ ‚ü© A is contained in Œì ‚ä©‚ü® l‚ÇÇ ‚ü© A.

  emb-‚â§-‚ä© : ‚àÄ {l‚ÇÅ l‚ÇÇ} ‚Üí l‚ÇÅ ‚â§·µò l‚ÇÇ ‚Üí Œì ‚ä©‚ü® l‚ÇÅ ‚ü© A ‚Üí Œì ‚ä©‚ü® l‚ÇÇ ‚ü© A

  -- An embedding lemma for _‚ä©‚ü®_‚ü©_‚à∑_/_.

  emb-‚â§-‚ä©‚à∑ :
    {‚ä©A : Œì ‚ä©‚ü® l‚ÇÅ ‚ü© A} {p : l‚ÇÅ ‚â§·µò l‚ÇÇ} ‚Üí
    Œì ‚ä©‚ü® l‚ÇÅ ‚ü© t ‚à∑ A / ‚ä©A ‚Üí
    Œì ‚ä©‚ü® l‚ÇÇ ‚ü© t ‚à∑ A / emb-‚â§-‚ä© p ‚ä©A
  emb-‚â§-‚ä©‚à∑ {‚ä©A} {p} = irrelevanceTerm ‚ä©A (emb-‚â§-‚ä© p ‚ä©A)

  emb-‚â§-‚ä© p (U·µ£‚Ä≤ k k< A‚áí) = U·µ£‚Ä≤ k (‚â§·µò-trans k< p) A‚áí
  emb-‚â§-‚ä© p (‚Ñï·µ£ x) = ‚Ñï·µ£ x
  emb-‚â§-‚ä© p (Empty·µ£ x) = Empty·µ£ x
  emb-‚â§-‚ä© p (Unit·µ£‚Ä≤ l‚Ä≤ l‚Ä≤‚â§ A‚áí ok) = Unit·µ£‚Ä≤ l‚Ä≤ (‚â§·µò-trans l‚Ä≤‚â§ p) A‚áí ok
  emb-‚â§-‚ä© p (ne‚Ä≤ k D neK K‚â°K) = ne‚Ä≤ k D neK K‚â°K
  emb-‚â§-‚ä© p (B·µ£‚Ä≤ W F G D A‚â°A [F] [G] G-ext ok) = B·µ£‚Ä≤ W F G D A‚â°A
    (Œª [Œæ] [œÅ] ‚Üí emb-‚â§-‚ä© p ([F] [Œæ] [œÅ]))
    (Œª [Œæ] [œÅ] [a] ‚Üí
       emb-‚â§-‚ä© p $ [G] [Œæ] [œÅ] $
       irrelevanceTerm (emb-‚â§-‚ä© p ([F] [Œæ] [œÅ])) ([F] [Œæ] [œÅ]) [a])
    (Œª [Œæ] [œÅ] [a] [b] a‚â°b ‚Üí irrelevanceEq _ _ $ G-ext [Œæ] [œÅ]
        (irrelevanceTerm (emb-‚â§-‚ä© p ([F] [Œæ] [œÅ])) ([F] [Œæ] [œÅ]) [a])
        (irrelevanceTerm (emb-‚â§-‚ä© p ([F] [Œæ] [œÅ])) ([F] [Œæ] [œÅ]) [b])
        (irrelevanceEqTerm (emb-‚â§-‚ä© p ([F] [Œæ] [œÅ])) ([F] [Œæ] [œÅ]) a‚â°b))
    ok
  emb-‚â§-‚ä© p (Id·µ£ (Id·µ£ Ty lhs rhs ‚áí*Id ‚ä©Ty ‚ä©lhs ‚ä©rhs)) =
    Id·µ£ (Id·µ£ Ty lhs rhs ‚áí*Id (emb-‚â§-‚ä© p ‚ä©Ty) (emb-‚â§-‚ä©‚à∑ {‚ä©A = ‚ä©Ty} ‚ä©lhs) (emb-‚â§-‚ä©‚à∑ {‚ä©A = ‚ä©Ty} ‚ä©rhs))

opaque

  -- An embedding lemma for _‚ä©‚ü®_‚ü©_‚â°_/_.

  emb-‚â§-‚ä©‚â° :
    {‚ä©A : Œì ‚ä©‚ü® l‚ÇÅ ‚ü© A} {p : l‚ÇÅ ‚â§·µò l‚ÇÇ} ‚Üí
    Œì ‚ä©‚ü® l‚ÇÅ ‚ü© A ‚â° B / ‚ä©A ‚Üí Œì ‚ä©‚ü® l‚ÇÇ ‚ü© A ‚â° B / emb-‚â§-‚ä© p ‚ä©A
  emb-‚â§-‚ä©‚â° {‚ä©A} {p} = irrelevanceEq ‚ä©A (emb-‚â§-‚ä© p ‚ä©A)

opaque

  -- An embedding lemma for _‚ä©‚ü®_‚ü©_‚â°_‚à∑_/_.

  emb-‚â§-‚ä©‚â°‚à∑ :
    {‚ä©A : Œì ‚ä©‚ü® l‚ÇÅ ‚ü© A} {p : l‚ÇÅ ‚â§·µò l‚ÇÇ} ‚Üí
    Œì ‚ä©‚ü® l‚ÇÅ ‚ü© t ‚â° u ‚à∑ A / ‚ä©A ‚Üí Œì ‚ä©‚ü® l‚ÇÇ ‚ü© t ‚â° u ‚à∑ A / emb-‚â§-‚ä© p ‚ä©A
  emb-‚â§-‚ä©‚â°‚à∑ {‚ä©A} {p} = irrelevanceEqTerm ‚ä©A (emb-‚â§-‚ä© p ‚ä©A)
