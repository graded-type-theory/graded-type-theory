{-# OPTIONS --without-K --safe #-}

module Definition.Modality.Unit where

open import Algebra
open import Definition.Modality
open import Tools.Product
open import Tools.PropositionalEquality
open import Tools.Unit

_+_ : Op‚ÇÇ ‚ä§
_ + _ = tt

_* : Op‚ÇÅ ‚ä§
_ * = tt

infixr 20 _+_

-- Properties of +

-- + is commutative
+-Commutative : Commutative _‚â°_ _+_
+-Commutative x y = refl

-- + is associative
+-Associative : Associative _‚â°_ _+_
+-Associative x y z = refl

-- + is left distributive of itself
+-DistributiveÀ° : _DistributesOverÀ°_ _‚â°_ _+_ _+_
+-DistributiveÀ° x y z = refl

-- + is right distributive over itself
+-Distributive ≥ : _DistributesOver ≥_ _‚â°_ _+_ _+_
+-Distributive ≥ x y z = refl

-- tt is the left identity of +
+-LeftIdentity : LeftIdentity _‚â°_ tt _+_
+-LeftIdentity tt = refl

-- tt is the right identity of +
+-RightIdentity : RightIdentity _‚â°_ tt _+_
+-RightIdentity tt = refl

+-Identity : Identity _‚â°_ tt _+_
+-Identity = +-LeftIdentity , +-RightIdentity

-- + is idempotent
+-Idempotent : Idempotent _‚â°_ _+_
+-Idempotent tt = refl

-- + forms the following algebras:

+-Magma : IsMagma _‚â°_ _+_
+-Magma = record
  { isEquivalence = isEquivalence
  ; ‚àô-cong        = Œª _ _ ‚Üí refl
  }

+-Semigroup : IsSemigroup _‚â°_ _+_
+-Semigroup = record
  { isMagma = +-Magma
  ; assoc   = +-Associative
  }

+-Monoid : IsMonoid _‚â°_ _+_ tt
+-Monoid = record
  { isSemigroup = +-Semigroup
  ; identity    = +-Identity
  }

+-CommutativeMonoid : IsCommutativeMonoid _‚â°_ _+_ tt
+-CommutativeMonoid = record
  { isMonoid = +-Monoid
  ; comm     = +-Commutative
  }

+-BoundedSemilattice : IsBoundedLattice _‚â°_ _+_ tt
+-BoundedSemilattice = record
  { isCommutativeMonoid = +-CommutativeMonoid
  ; idem                = +-Idempotent
  }

-- ‚ä§ form a modality with + as addition, multiplication and meet
UnitModality : Modality ‚ä§
UnitModality = record
  { _+_                  = _+_
  ; _¬∑_                  = _+_
  ; _‚àß_                  = _+_
  ; _*                   = _*
  ; ùüò                    = tt
  ; ùüô                    = tt
  ; +-CommutativeMonoid  = +-CommutativeMonoid
  ; ¬∑-Monoid             = +-Monoid
  ; ‚àß-BoundedSemilattice = +-BoundedSemilattice
  ; *-StarSemiring       = Œª p ‚Üí refl
  ; ¬∑-Zero               = (Œª x ‚Üí refl)    , (Œª x ‚Üí refl)
  ; +-noInverse          = Œª p q x ‚Üí refl , refl
  ; ¬∑Distr+              = +-DistributiveÀ° , +-Distributive ≥
  ; ¬∑Distr‚àß              = +-DistributiveÀ° , +-Distributive ≥
  ; +Distr‚àß              = +-DistributiveÀ° , +-Distributive ≥
  }
