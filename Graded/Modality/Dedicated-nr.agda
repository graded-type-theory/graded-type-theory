------------------------------------------------------------------------
-- The types Dedicated-nr and No-dedicated-nr
------------------------------------------------------------------------

import Graded.Modality

module Graded.Modality.Dedicated-nr
  {a} {M : Set a}
  (open Graded.Modality M)
  (ùïÑ : Modality)
  where

open Modality ùïÑ

open import Tools.Bool
open import Tools.Empty
open import Tools.Function
open import Tools.Product
open import Tools.PropositionalEquality
open import Tools.Relation

private variable
  A : Set _

------------------------------------------------------------------------
-- Dedicated-nr

-- A wrapper type, intended to be used in the types of instance
-- arguments.

record Dedicated-nr : Set a where
  no-eta-equality
  pattern
  constructor dedicated-nr
  field
    nr : T nr-available

-- This wrapper type is propositional.

Dedicated-nr-propositional : (p q : Dedicated-nr) ‚Üí p ‚â° q
Dedicated-nr-propositional (dedicated-nr _) (dedicated-nr _) =
  cong dedicated-nr T-propositional

opaque

  -- A characterisation lemma for Dedicated-nr.

  Dedicated-nr‚áî : Dedicated-nr ‚áî T nr-available
  Dedicated-nr‚áî = Dedicated-nr.nr , dedicated-nr

------------------------------------------------------------------------
-- No-dedicated-nr

-- A wrapper type, intended to be used in the types of instance
-- arguments.

record No-dedicated-nr : Set a where
  no-eta-equality
  pattern
  constructor no-dedicated-nr
  field
    no-nr‚Ä≤ : T (not nr-available)

  -- A dedicated nr function is not available.

  no-nr : ¬¨ T nr-available
  no-nr = T-not‚áî¬¨-T .proj‚ÇÅ no-nr‚Ä≤

-- This wrapper type is propositional.

No-dedicated-nr-propositional : (p q : No-dedicated-nr) ‚Üí p ‚â° q
No-dedicated-nr-propositional (no-dedicated-nr _) (no-dedicated-nr _) =
  cong no-dedicated-nr T-propositional

------------------------------------------------------------------------
-- Some lemmas related to both Dedicated-nr and No-dedicated-nr

-- One cannot both have and not have a dedicated nr function.

not-nr-and-no-nr :
  ‚¶É nr : Dedicated-nr ‚¶Ñ ‚¶É no-nr : No-dedicated-nr ‚¶Ñ ‚Üí ‚ä•
not-nr-and-no-nr ‚¶É nr = dedicated-nr n ‚¶Ñ ‚¶É no-nr = no-dedicated-nr nn ‚¶Ñ
  with nr-available
‚Ä¶ | true  = nn
‚Ä¶ | false = n

-- The property of either having or not having a dedicated nr
-- function.

data Dedicated-nr? : Set a where
  does-have-nr     : ‚¶É has-nr : Dedicated-nr ‚¶Ñ ‚Üí Dedicated-nr?
  does-not-have-nr : ‚¶É no-nr : No-dedicated-nr ‚¶Ñ ‚Üí Dedicated-nr?

-- One either has or does not have a dedicated nr function.

dedicated-nr? : Dedicated-nr?
dedicated-nr? with nr-available in eq
‚Ä¶ | false =
  does-not-have-nr
    ‚¶É no-nr = no-dedicated-nr (subst (T ‚àò‚Üí not) (sym eq) _) ‚¶Ñ
‚Ä¶ | true  =
  does-have-nr ‚¶É has-nr = dedicated-nr (subst T (sym eq) _) ‚¶Ñ
