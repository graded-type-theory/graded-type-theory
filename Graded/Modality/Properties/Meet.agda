------------------------------------------------------------------------
-- Properties of meet.
------------------------------------------------------------------------

open import Graded.Modality

module Graded.Modality.Properties.Meet
  {a} {M : Set a} (ùïÑ : Semiring-with-meet M) where

open Semiring-with-meet ùïÑ

open import Graded.Modality.Properties.PartialOrder ùïÑ

open import Tools.Product
open import Tools.PropositionalEquality
import Tools.Reasoning.PartialOrder
import Tools.Reasoning.PropositionalEquality

private
  variable
    p p‚Ä≤ q q‚Ä≤ r r‚Ä≤ : M

-- Meet on the left is a monotone function
-- If p ‚â§ q then p ‚àß r ‚â§ q ‚àß r

‚àß-monotoneÀ° : p ‚â§ q ‚Üí p ‚àß r ‚â§ q ‚àß r
‚àß-monotoneÀ° {p} {q} {r} p‚â§q = begin
  p ‚àß r             ‚â°‚ü® ‚àß-cong p‚â§q (sym (‚àß-idem r)) ‚ü©
  (p ‚àß q) ‚àß r ‚àß r   ‚â°‚ü® ‚àß-assoc p q (r ‚àß r) ‚ü©
  p ‚àß q ‚àß r ‚àß r     ‚â°‚ü® ‚àß-congÀ° (‚àß-comm q (r ‚àß r)) ‚ü©
  p ‚àß (r ‚àß r) ‚àß q   ‚â°‚ü® ‚àß-congÀ° (‚àß-assoc r r q) ‚ü©
  p ‚àß r ‚àß r ‚àß q     ‚â°Àò‚ü® ‚àß-assoc p r (r ‚àß q) ‚ü©
  (p ‚àß r) ‚àß r ‚àß q   ‚â°‚ü® ‚àß-congÀ° (‚àß-comm r q) ‚ü©
  (p ‚àß r) ‚àß (q ‚àß r) ‚àé
  where open Tools.Reasoning.PropositionalEquality

-- Meet on the right is a monotone function
-- If p ‚â§ q then r ‚àß p ‚â§ r ‚àß q

‚àß-monotone ≥ : p ‚â§ q ‚Üí r ‚àß p ‚â§ r ‚àß q
‚àß-monotone ≥ {p} {q} {r} p‚â§q = begin
  r ‚àß p             ‚â°‚ü® ‚àß-cong (sym (‚àß-idem r)) p‚â§q ‚ü©
  (r ‚àß r) ‚àß (p ‚àß q) ‚â°‚ü® ‚àß-assoc r r (p ‚àß q) ‚ü©
  r ‚àß r ‚àß p ‚àß q     ‚â°‚ü® ‚àß-congÀ° (‚àß-comm r (p ‚àß q)) ‚ü©
  r ‚àß (p ‚àß q) ‚àß r   ‚â°‚ü® ‚àß-congÀ° (‚àß-assoc p q r) ‚ü©
  r ‚àß p ‚àß (q ‚àß r)   ‚â°Àò‚ü® ‚àß-assoc r p (q ‚àß r) ‚ü©
  (r ‚àß p) ‚àß (q ‚àß r) ‚â°‚ü® ‚àß-congÀ° (‚àß-comm q r) ‚ü©
  (r ‚àß p) ‚àß (r ‚àß q) ‚àé
  where open Tools.Reasoning.PropositionalEquality

-- Meet is a monotone function
-- If p ‚â§ p‚Ä≤ and q ‚â§ q‚Ä≤ then p ‚àß q ‚â§ p‚Ä≤ ‚àß q‚Ä≤

‚àß-monotone : p ‚â§ p‚Ä≤ ‚Üí q ‚â§ q‚Ä≤ ‚Üí p ‚àß q ‚â§ p‚Ä≤ ‚àß q‚Ä≤
‚àß-monotone p‚â§p‚Ä≤ q‚â§q‚Ä≤ = ‚â§-trans (‚àß-monotoneÀ°  p‚â§p‚Ä≤) (‚àß-monotone ≥ q‚â§q‚Ä≤)

-- Meet on the left is a decreasing function
-- p ‚àß q ‚â§ p

‚àß-decreasingÀ° : (p q : M) ‚Üí p ‚àß q ‚â§ p
‚àß-decreasingÀ° p q = begin
  p ‚àß q       ‚â°Àò‚ü® ‚àß-cong ≥ (‚àß-idem p) ‚ü©
  (p ‚àß p) ‚àß q ‚â°‚ü® ‚àß-assoc p p q ‚ü©
  p ‚àß (p ‚àß q) ‚â°‚ü® ‚àß-comm p (p ‚àß q) ‚ü©
  (p ‚àß q) ‚àß p ‚àé
  where open Tools.Reasoning.PropositionalEquality

-- Meet on the right is a decreasing function
-- p ‚àß q ‚â§ q

‚àß-decreasing ≥ : (p q : M) ‚Üí p ‚àß q ‚â§ q
‚àß-decreasing ≥ p q = begin
  p ‚àß q       ‚â°Àò‚ü® ‚àß-congÀ° (‚àß-idem q) ‚ü©
  p ‚àß (q ‚àß q) ‚â°Àò‚ü® ‚àß-assoc p q q ‚ü©
  (p ‚àß q) ‚àß q ‚àé
  where open Tools.Reasoning.PropositionalEquality

-- The result of the meet operation is a greatest lower bound of its
-- two arguments.

‚àß-greatest-lower-bound : p ‚â§ q ‚Üí p ‚â§ r ‚Üí p ‚â§ q ‚àß r
‚àß-greatest-lower-bound {p = p} {q = q} {r = r} p‚â§q p‚â§r = begin
  p            ‚â°‚ü® p‚â§q ‚ü©
  p ‚àß q        ‚â°‚ü® ‚àß-cong ≥ p‚â§r ‚ü©
  (p ‚àß r) ‚àß q  ‚â°‚ü® ‚àß-assoc _ _ _ ‚ü©
  p ‚àß (r ‚àß q)  ‚â°‚ü® ‚àß-congÀ° (‚àß-comm _ _) ‚ü©
  p ‚àß (q ‚àß r)  ‚àé
  where
  open Tools.Reasoning.PropositionalEquality

-- If p is strictly below q¬†‚àß¬†r, then p is strictly below q.

<‚àßÀ° : p < q ‚àß r ‚Üí p < q
<‚àßÀ° {p = p} {q = q} {r = r} (p‚â§q‚àßr , p‚â¢q‚àßr) =
    (let open Tools.Reasoning.PartialOrder ‚â§-poset in begin
       p      ‚â§‚ü® p‚â§q‚àßr ‚ü©
       q ‚àß r  ‚â§‚ü® ‚àß-decreasingÀ° _ _ ‚ü©
       q      ‚àé)
  , (let open Tools.Reasoning.PropositionalEquality in Œª p‚â°q ‚Üí
     p‚â¢q‚àßr (
       p            ‚â°‚ü® p‚â§q‚àßr ‚ü©
       p ‚àß (q ‚àß r)  ‚â°Àò‚ü® ‚àß-assoc _ _ _ ‚ü©
       (p ‚àß q) ‚àß r  ‚â°‚ü® cong (Œª p ‚Üí (p ‚àß _) ‚àß _) p‚â°q ‚ü©
       (q ‚àß q) ‚àß r  ‚â°‚ü® cong (_‚àß _) (‚àß-idem _) ‚ü©
       q ‚àß r        ‚àé))

-- If p is strictly below q¬†‚àß¬†r, then p is strictly below r.

<‚àß ≥ : p < q ‚àß r ‚Üí p < r
<‚àß ≥ p<q‚àßr = <‚àßÀ° (subst (_ <_) (‚àß-comm _ _) p<q‚àßr)

-- If _+_ is pointwise bounded by _‚àß_, then ùüò is larger than all other
-- quantities.

+‚â§‚àß‚Üí‚â§ùüò :
  (‚àÄ p q ‚Üí p + q ‚â§ p ‚àß q) ‚Üí
  (‚àÄ p ‚Üí p ‚â§ ùüò)
+‚â§‚àß‚Üí‚â§ùüò +‚â§‚àß p =
  p                  ‚â°Àò‚ü® +-identity ≥ _ ‚ü©
  p + ùüò              ‚â°‚ü® +‚â§‚àß _ _ ‚ü©
  (p + ùüò) ‚àß (p ‚àß ùüò)  ‚â°‚ü® ‚àß-cong ≥ (+-identity ≥ _) ‚ü©
  p ‚àß (p ‚àß ùüò)        ‚â°Àò‚ü® ‚àß-assoc _ _ _ ‚ü©
  (p ‚àß p) ‚àß ùüò        ‚â°‚ü® ‚àß-cong ≥ (‚àß-idem _) ‚ü©
  p ‚àß ùüò              ‚àé
  where
  open Tools.Reasoning.PropositionalEquality
