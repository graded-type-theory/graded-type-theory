------------------------------------------------------------------------
-- Properties of addition.
------------------------------------------------------------------------

open import Graded.Modality

module Graded.Modality.Properties.Addition
  {a} {M : Set a} (ùïÑ : Semiring-with-meet M) where

open Semiring-with-meet ùïÑ

open import Graded.Modality.Properties.Meet ùïÑ
open import Graded.Modality.Properties.PartialOrder ùïÑ

open import Tools.Algebra M
open import Tools.PropositionalEquality
import Tools.Reasoning.PartialOrder

private
  variable
    p p‚Ä≤ q q‚Ä≤ r r‚Ä≤ : M

-- Addition on the left is a monotone function
-- If p ‚â§ q then p + r ‚â§ q + r

+-monotoneÀ° : p ‚â§ q ‚Üí p + r ‚â§ q + r
+-monotoneÀ° p‚â§q = ‚âà-trans (+-cong ≥ p‚â§q) (+-distrib ≥-‚àß _ _ _)

-- Addition on the right is a monotone function
-- If p ‚â§ q then r + p ‚â§ r + q

+-monotone ≥ : p ‚â§ q ‚Üí r + p ‚â§ r + q
+-monotone ≥ p‚â§q = ‚âà-trans (+-congÀ° p‚â§q) (+-distribÀ°-‚àß _ _ _)

-- Addition is a monotone function
-- If p ‚â§ p‚Ä≤ and q ‚â§ q‚Ä≤ then p + q ‚â§ p‚Ä≤ + q‚Ä≤

+-monotone : p ‚â§ p‚Ä≤ ‚Üí q ‚â§ q‚Ä≤ ‚Üí p + q ‚â§ p‚Ä≤ + q‚Ä≤
+-monotone p‚â§p‚Ä≤ q‚â§q‚Ä≤ = ‚â§-trans (+-monotoneÀ° p‚â§p‚Ä≤) (+-monotone ≥ q‚â§q‚Ä≤)

-- The operation _+_ is sub-interchangeable with _‚àß_ (with respect
-- to _‚â§_).

+-sub-interchangeable-‚àß : _+_ SubInterchangeable _‚àß_ by _‚â§_
+-sub-interchangeable-‚àß p q p‚Ä≤ q‚Ä≤ = begin
  (p ‚àß q) + (p‚Ä≤ ‚àß q‚Ä≤)                            ‚âà‚ü® +-distribÀ°-‚àß _ _ _ ‚ü©
  ((p ‚àß q) + p‚Ä≤) ‚àß ((p ‚àß q) + q‚Ä≤)                ‚âà‚ü® ‚àß-cong (+-distrib ≥-‚àß _ _ _) (+-distrib ≥-‚àß _ _ _) ‚ü©
  ((p + p‚Ä≤) ‚àß (q + p‚Ä≤)) ‚àß ((p + q‚Ä≤) ‚àß (q + q‚Ä≤))  ‚â§‚ü® ‚àß-monotone (‚àß-decreasingÀ° _ _) (‚àß-decreasing ≥ _ _) ‚ü©
  (p + p‚Ä≤) ‚àß (q + q‚Ä≤)                            ‚àé
  where
  open Tools.Reasoning.PartialOrder ‚â§-poset
